% This code was generated using ADiGator version 1.2
% ©2010-2014 Matthew J. Weinstein and Anil V. Rao
% ADiGator may be obtained at https://sourceforge.net/projects/adigator/ 
% Contact: mweinstein@ufl.edu
% Bugs/suggestions may be reported to the sourceforge forums
%                    DISCLAIMER
% ADiGator is a general-purpose software distributed under the GNU General
% Public License version 3.0. While the software is distributed with the
% hope that it will be useful, both the software and generated code are
% provided 'AS IS' with NO WARRANTIES OF ANY KIND and no merchantability
% or fitness for any purpose or application.

function phaseout = ArmContinuousADiGatorGrd(input)
global ADiGator_ArmContinuousADiGatorGrd
if isempty(ADiGator_ArmContinuousADiGatorGrd); ADiGator_LoadData(); end
Gator1Data = ADiGator_ArmContinuousADiGatorGrd.ArmContinuousADiGatorGrd.Gator1Data;
% ADiGator Start Derivative Computations
%User Line: % input
%User Line: % input.phase(phasenumber).state
%User Line: % input.phase(phasenumber).control
%User Line: % input.phase(phasenumber).time
%User Line: % input.phase(phasenumber).parameter
%User Line: %
%User Line: % input.auxdata = auxiliary information
%User Line: %
%User Line: % output
%User Line: % phaseout(phasenumber).dynamics
%User Line: % phaseout(phasenumber).path
%User Line: % phaseout(phasenumber).integrand
t.dV = input.phase.time.dV; t.f = input.phase.time.f;
%User Line: t = input.phase.time;
z.dV = input.phase.state.dV; z.f = input.phase.state.f;
%User Line: z = input.phase.state;
v.dV = input.phase.control.dV; v.f = input.phase.control.f;
%User Line: v = input.phase.control;
x.dV = z.dV(:,Gator1Data.Index2);
x.f = z.f(:,Gator1Data.Index1);
%User Line: x=z(:,1:4);
u.dV = z.dV(:,Gator1Data.Index4);
u.f = z.f(:,Gator1Data.Index3);
%User Line: u=z(:,5:10);
%User Line: %% straight out of maplesim
cadainput4_1.dV = t.dV; cadainput4_1.f = t.f;
%User Line: cadainput4_1 = t;
cadainput4_2.dV = x.dV; cadainput4_2.f = x.f;
%User Line: cadainput4_2 = x;
cadainput4_3.dV = u.dV; cadainput4_3.f = u.f;
%User Line: cadainput4_3 = u;
cadaoutput4_1 = ADiGator_xpfunction_arm1(cadainput4_1,cadainput4_2,cadainput4_3);
% Call to function: xpfunction_arm
dy.dV = cadaoutput4_1.dV; dy.f = cadaoutput4_1.f;
%User Line: dy=cadaoutput4_1;
%User Line: % err=(((x(:,1)-input.auxdata.Xdes(1))).^2+...
%User Line: %      ((x(:,3)-input.auxdata.Xdes(2))).^2);
%User Line: % x0=0;
%User Line: % xf=0.2;
%User Line: % xd0=0;xdf=0;
%User Line: % xdd0=0;xddf=0;
%User Line: % tf=1;
%User Line: %
%User Line: % a0=x0;
%User Line: % a1=xd0;
%User Line: % a2=xdd0/2;
%User Line: % a3=(20*xf-20*x0-(8*xdf+12*xd0)*tf-(3*xdd0-xddf)*tf^2)/(2*tf^3);
%User Line: % a4=(30*x0-30*xf+(14*xdf+16*xd0)*tf+(3*xdd0-2*xddf)*tf^2)/(2*tf^4);
%User Line: % a5=(12*xf-12*x0-(6*xdf+6*xd0)*tf-(xdd0-xddf)*tf^2)/(2*tf^5);
%User Line: %
%User Line: % X=a0+a1*t+a2*t.^2+a3*t.^3+a4*t.^4+a5*t.^5;
%User Line: %
%User Line: % theta=input.auxdata.theta;%-90*pi/180;
%User Line: % R=[cos(theta) -sin(theta);sin(theta) cos(theta)];
%User Line: % xzf=R*[xf;0];
%User Line: %
%User Line: % xz=[X t*0]*R';
%User Line: %
%User Line: % XZ=XYZ(x);
%User Line: % XZinitial=input.auxdata.XZinitial;
%User Line: %
%User Line: % errX=(XZ(:,1)-(XZinitial(1)+xz(:,1))).*(t<=1)+(XZ(:,1)-(XZinitial(1)+xzf(1))).*(t>1);
%User Line: % errZ=(XZ(:,2)-(XZinitial(2)+xz(:,2))).*(t<=1)+(XZ(:,2)-(XZinitial(2)+xzf(2))).*(t>1);
cadainput3_1.dV = x.dV; cadainput3_1.f = x.f;
%User Line: cadainput3_1 = x;
cadaoutput3_1 = ADiGator_XYZ1(cadainput3_1);
% Call to function: XYZ
XZ.dV = cadaoutput3_1.dV; XZ.f = cadaoutput3_1.f;
%User Line: XZ=cadaoutput3_1;
XZinitial = input.auxdata.XZinitial;
%User Line: XZinitial=input.auxdata.XZinitial;
cada1f1dV = XZ.dV(:,Gator1Data.Index5);
cada1f1 = XZ.f(:,1);
cada1f2 = XZinitial(1);
cada1f3 = cada1f2 + 0.2;
errX.dV = cada1f1dV;
errX.f = cada1f1 - cada1f3;
%User Line: errX=XZ(:,1)-(XZinitial(1)+0.2);
cada1f1dV = XZ.dV(:,Gator1Data.Index6);
cada1f1 = XZ.f(:,2);
cada1f2 = XZinitial(2);
cada1f3 = cada1f2 + 0.01248;
errZ.dV = cada1f1dV;
errZ.f = cada1f1 - cada1f3;
%User Line: errZ=XZ(:,2)-(XZinitial(2)+0.01248);
cada1tf2 = errX.f(:,Gator1Data.Index7);
cada1f1dV = 2.*cada1tf2.^(2-1).*errX.dV;
cada1f1 = errX.f.^2;
cada1tf2 = errZ.f(:,Gator1Data.Index8);
cada1f2dV = 2.*cada1tf2.^(2-1).*errZ.dV;
cada1f2 = errZ.f.^2;
cada1f3dV = 10.*cada1f2dV;
cada1f3 = 10*cada1f2;
cada1td1 = cada1f1dV;
cada1td1 = cada1td1 + cada1f3dV;
errx.dV = cada1td1;
errx.f = cada1f1 + cada1f3;
%User Line: errx=errX.^2+10*errZ.^2;
errVX.dV = XZ.dV(:,Gator1Data.Index9);
errVX.f = XZ.f(:,3);
%User Line: errVX=XZ(:,3);
errVZ.dV = XZ.dV(:,Gator1Data.Index10);
errVZ.f = XZ.f(:,4);
%User Line: errVZ=XZ(:,4);
cada1tf2 = errVX.f(:,Gator1Data.Index11);
cada1f1dV = 2.*cada1tf2.^(2-1).*errVX.dV;
cada1f1 = errVX.f.^2;
cada1tf2 = errVZ.f(:,Gator1Data.Index12);
cada1f2dV = 2.*cada1tf2.^(2-1).*errVZ.dV;
cada1f2 = errVZ.f.^2;
cada1td1 = cada1f1dV;
cada1td1 = cada1td1 + cada1f2dV;
errv.dV = cada1td1;
errv.f = cada1f1 + cada1f2;
%User Line: errv=errVX.^2+errVZ.^2;
w.f = 10e-2;
%User Line: w=10e-2;
cada1f1dV = w.f.*errv.dV;
cada1f1 = w.f*errv.f;
cada1td1 = zeros(size(errx.dV,1),4);
cada1td1(:,Gator1Data.Index13) = errx.dV;
cada1td1 = cada1td1 + cada1f1dV;
err.dV = cada1td1;
err.f = errx.f + cada1f1;
%User Line: err=errx+w*errv;
cadainput2_1.dV = u.dV; cadainput2_1.f = u.f;
%User Line: cadainput2_1 = u;
cadainput2_2.dV = v.dV; cadainput2_2.f = v.f;
%User Line: cadainput2_2 = v;
cadaoutput2_1 = ADiGator_MuscleActivation1(cadainput2_1,cadainput2_2);
% Call to function: MuscleActivation
cada1td1 = zeros(size(dy.f,1),38);
cada1td1(:,Gator1Data.Index14) = dy.dV;
cada1td1(:,Gator1Data.Index15) = cadaoutput2_1.dV;
cada1td1(:,Gator1Data.Index16) = err.dV;
dx.dV = cada1td1;
dx.f = [dy.f cadaoutput2_1.f err.f];
%User Line: dx=[dy cadaoutput2_1 err];
%User Line: %%
phaseout.dynamics.dV = dx.dV; phaseout.dynamics.f = dx.f;
%User Line: phaseout.dynamics = dx;
cada1f1dV = v.dV(:,1);
cada1f1 = v.f(:,1);
cada1f2dV = 2.*cada1f1.^(2-1).*cada1f1dV;
cada1f2 = cada1f1.^2;
cada1f3dV = v.dV(:,2);
cada1f3 = v.f(:,2);
cada1f4dV = 2.*cada1f3.^(2-1).*cada1f3dV;
cada1f4 = cada1f3.^2;
cada1td1 = zeros(size(cada1f2dV,1),2);
cada1td1(:,1) = cada1f2dV;
cada1td1(:,2) = cada1td1(:,2) + cada1f4dV;
cada1f5dV = cada1td1;
cada1f5 = cada1f2 + cada1f4;
cada1f6dV = v.dV(:,3);
cada1f6 = v.f(:,3);
cada1f7dV = 2.*cada1f6.^(2-1).*cada1f6dV;
cada1f7 = cada1f6.^2;
cada1td1 = zeros(size(cada1f5dV,1),3);
cada1td1(:,Gator1Data.Index17) = cada1f5dV;
cada1td1(:,3) = cada1td1(:,3) + cada1f7dV;
cada1f8dV = cada1td1;
cada1f8 = cada1f5 + cada1f7;
cada1f9dV = v.dV(:,4);
cada1f9 = v.f(:,4);
cada1f10dV = 2.*cada1f9.^(2-1).*cada1f9dV;
cada1f10 = cada1f9.^2;
cada1td1 = zeros(size(cada1f8dV,1),4);
cada1td1(:,Gator1Data.Index18) = cada1f8dV;
cada1td1(:,4) = cada1td1(:,4) + cada1f10dV;
cada1f11dV = cada1td1;
cada1f11 = cada1f8 + cada1f10;
cada1f12dV = v.dV(:,5);
cada1f12 = v.f(:,5);
cada1f13dV = 2.*cada1f12.^(2-1).*cada1f12dV;
cada1f13 = cada1f12.^2;
cada1td1 = zeros(size(cada1f11dV,1),5);
cada1td1(:,Gator1Data.Index19) = cada1f11dV;
cada1td1(:,5) = cada1td1(:,5) + cada1f13dV;
cada1f14dV = cada1td1;
cada1f14 = cada1f11 + cada1f13;
cada1f15dV = v.dV(:,6);
cada1f15 = v.f(:,6);
cada1f16dV = 2.*cada1f15.^(2-1).*cada1f15dV;
cada1f16 = cada1f15.^2;
cada1td1 = zeros(size(cada1f14dV,1),6);
cada1td1(:,Gator1Data.Index20) = cada1f14dV;
cada1td1(:,6) = cada1td1(:,6) + cada1f16dV;
integrand.dV = cada1td1;
integrand.f = cada1f14 + cada1f16;
%User Line: integrand          =(v(:,1).^2+v(:,2).^2+v(:,3).^2+v(:,4).^2+v(:,5).^2+v(:,6).^2);
phaseout.integrand.dV = integrand.dV; phaseout.integrand.f = integrand.f;
%User Line: phaseout.integrand = integrand;
phaseout.dynamics.dV_size = [11,18];
phaseout.dynamics.dV_location = Gator1Data.Index21;
phaseout.integrand.dV_size = 18;
phaseout.integrand.dV_location = Gator1Data.Index22;
end
function da = ADiGator_MuscleActivation1(a,u)
global ADiGator_ArmContinuousADiGatorGrd
Gator1Data = ADiGator_ArmContinuousADiGatorGrd.ADiGator_MuscleActivation1.Gator1Data;
% ADiGator Start Derivative Computations
t2.f = 1/0.05;
%User Line: t2=1/0.05;
t1.f = 66.66666666666667 - t2.f;
%User Line: t1=1/0.015-t2;
cada1td1 = zeros(size(u.dV,1),12);
cada1td1(:,Gator1Data.Index1) = u.dV;
cada1td1(:,Gator1Data.Index2) = cada1td1(:,Gator1Data.Index2) + -a.dV;
cada1f1dV = cada1td1;
cada1f1 = u.f - a.f;
cada1f2dV = t1.f.*u.dV;
cada1f2 = t1.f*u.f;
cada1f3dV = cada1f2dV;
cada1f3 = cada1f2 + t2.f;
cada1tf1 = cada1f3(:,Gator1Data.Index3);
cada1td1 = cada1tf1.*cada1f1dV;
cada1td1(:,Gator1Data.Index4) = cada1td1(:,Gator1Data.Index4) + cada1f1.*cada1f3dV;
da.dV = cada1td1;
da.f = cada1f1.*cada1f3;
%User Line: da=(u-a).*(t1*u+t2);
end
function XZ = ADiGator_XYZ1(x)
global ADiGator_ArmContinuousADiGatorGrd
Gator1Data = ADiGator_ArmContinuousADiGatorGrd.ADiGator_XYZ1.Gator1Data;
% ADiGator Start Derivative Computations
L1.f = 0.4;
%User Line: L1=0.4;
L2.f = 0.325;
%User Line: L2=0.325;
cada1f1 = uminus(L2.f);
cada1f2dV = x.dV(:,1);
cada1f2 = x.f(:,1);
cada1f3dV = x.dV(:,3);
cada1f3 = x.f(:,3);
cada1td1 = zeros(size(cada1f2dV,1),2);
cada1td1(:,1) = cada1f2dV;
cada1td1(:,2) = cada1td1(:,2) + cada1f3dV;
cada1f4dV = cada1td1;
cada1f4 = cada1f2 + cada1f3;
cada1tf1 = cada1f4(:,Gator1Data.Index1);
cada1f5dV = -sin(cada1tf1).*cada1f4dV;
cada1f5 = cos(cada1f4);
cada1f6dV = cada1f1.*cada1f5dV;
cada1f6 = cada1f1*cada1f5;
cada1f7dV = x.dV(:,1);
cada1f7 = x.f(:,1);
cada1f8dV = -sin(cada1f7).*cada1f7dV;
cada1f8 = cos(cada1f7);
cada1f9dV = L1.f.*cada1f8dV;
cada1f9 = L1.f*cada1f8;
cada1td1 = cada1f6dV;
cada1td1(:,1) = cada1td1(:,1) + -cada1f9dV;
XYZ_1.dV = cada1td1;
XYZ_1.f = cada1f6 - cada1f9;
%User Line: XYZ_1 = -L2 .* cos(x(:,1) + x(:,3)) - L1 .* cos(x(:,1));
cada1f1dV = x.dV(:,1);
cada1f1 = x.f(:,1);
cada1f2dV = x.dV(:,3);
cada1f2 = x.f(:,3);
cada1td1 = zeros(size(cada1f1dV,1),2);
cada1td1(:,1) = cada1f1dV;
cada1td1(:,2) = cada1td1(:,2) + cada1f2dV;
cada1f3dV = cada1td1;
cada1f3 = cada1f1 + cada1f2;
cada1tf1 = cada1f3(:,Gator1Data.Index2);
cada1f4dV = cos(cada1tf1).*cada1f3dV;
cada1f4 = sin(cada1f3);
cada1f5dV = L2.f.*cada1f4dV;
cada1f5 = L2.f*cada1f4;
cada1f6dV = x.dV(:,1);
cada1f6 = x.f(:,1);
cada1f7dV = cos(cada1f6).*cada1f6dV;
cada1f7 = sin(cada1f6);
cada1f8dV = L1.f.*cada1f7dV;
cada1f8 = L1.f*cada1f7;
cada1td1 = cada1f5dV;
cada1td1(:,1) = cada1td1(:,1) + cada1f8dV;
XYZ_3.dV = cada1td1;
XYZ_3.f = cada1f5 + cada1f8;
%User Line: XYZ_3 = L2 .* sin(x(:,1) + x(:,3)) + L1 .* sin(x(:,1));
cada1f1dV = x.dV(:,4);
cada1f1 = x.f(:,4);
cada1f2dV = L2.f.*cada1f1dV;
cada1f2 = L2.f*cada1f1;
cada1f3dV = x.dV(:,1);
cada1f3 = x.f(:,1);
cada1f4dV = x.dV(:,3);
cada1f4 = x.f(:,3);
cada1td1 = zeros(size(cada1f3dV,1),2);
cada1td1(:,1) = cada1f3dV;
cada1td1(:,2) = cada1td1(:,2) + cada1f4dV;
cada1f5dV = cada1td1;
cada1f5 = cada1f3 + cada1f4;
cada1tf1 = cada1f5(:,Gator1Data.Index3);
cada1f6dV = cos(cada1tf1).*cada1f5dV;
cada1f6 = sin(cada1f5);
cada1td1 = zeros(size(cada1f2dV,1),3);
cada1td1(:,3) = cada1f6.*cada1f2dV;
cada1tf1 = cada1f2(:,Gator1Data.Index4);
cada1td1(:,Gator1Data.Index5) = cada1td1(:,Gator1Data.Index5) + cada1tf1.*cada1f6dV;
cada1f7dV = cada1td1;
cada1f7 = cada1f2.*cada1f6;
cada1f8dV = x.dV(:,2);
cada1f8 = x.f(:,2);
cada1f9dV = L2.f.*cada1f8dV;
cada1f9 = L2.f*cada1f8;
cada1f10dV = x.dV(:,1);
cada1f10 = x.f(:,1);
cada1f11dV = x.dV(:,3);
cada1f11 = x.f(:,3);
cada1td1 = zeros(size(cada1f10dV,1),2);
cada1td1(:,1) = cada1f10dV;
cada1td1(:,2) = cada1td1(:,2) + cada1f11dV;
cada1f12dV = cada1td1;
cada1f12 = cada1f10 + cada1f11;
cada1tf1 = cada1f12(:,Gator1Data.Index6);
cada1f13dV = cos(cada1tf1).*cada1f12dV;
cada1f13 = sin(cada1f12);
cada1td1 = zeros(size(cada1f9dV,1),3);
cada1td1(:,2) = cada1f13.*cada1f9dV;
cada1tf1 = cada1f9(:,Gator1Data.Index7);
cada1td1(:,Gator1Data.Index8) = cada1td1(:,Gator1Data.Index8) + cada1tf1.*cada1f13dV;
cada1f14dV = cada1td1;
cada1f14 = cada1f9.*cada1f13;
cada1td1 = zeros(size(cada1f7dV,1),4);
cada1td1(:,Gator1Data.Index9) = cada1f7dV;
cada1td1(:,Gator1Data.Index10) = cada1td1(:,Gator1Data.Index10) + cada1f14dV;
cada1f15dV = cada1td1;
cada1f15 = cada1f7 + cada1f14;
cada1f16dV = x.dV(:,2);
cada1f16 = x.f(:,2);
cada1f17dV = L1.f.*cada1f16dV;
cada1f17 = L1.f*cada1f16;
cada1f18dV = x.dV(:,1);
cada1f18 = x.f(:,1);
cada1f19dV = cos(cada1f18).*cada1f18dV;
cada1f19 = sin(cada1f18);
cada1td1 = zeros(size(cada1f17dV,1),2);
cada1td1(:,2) = cada1f19.*cada1f17dV;
cada1td1(:,1) = cada1td1(:,1) + cada1f17.*cada1f19dV;
cada1f20dV = cada1td1;
cada1f20 = cada1f17.*cada1f19;
cada1td1 = cada1f15dV;
cada1td1(:,Gator1Data.Index11) = cada1td1(:,Gator1Data.Index11) + cada1f20dV;
VXZ_1.dV = cada1td1;
VXZ_1.f = cada1f15 + cada1f20;
%User Line: VXZ_1 = L2 .* x(:,4) .* sin(x(:,1) + x(:,3)) + L2 .* x(:,2) .* sin(x(:,1) + x(:,3)) + L1 .* x(:,2) .* sin(x(:,1));
cada1f1dV = x.dV(:,4);
cada1f1 = x.f(:,4);
cada1f2dV = L2.f.*cada1f1dV;
cada1f2 = L2.f*cada1f1;
cada1f3dV = x.dV(:,1);
cada1f3 = x.f(:,1);
cada1f4dV = x.dV(:,3);
cada1f4 = x.f(:,3);
cada1td1 = zeros(size(cada1f3dV,1),2);
cada1td1(:,1) = cada1f3dV;
cada1td1(:,2) = cada1td1(:,2) + cada1f4dV;
cada1f5dV = cada1td1;
cada1f5 = cada1f3 + cada1f4;
cada1tf1 = cada1f5(:,Gator1Data.Index12);
cada1f6dV = -sin(cada1tf1).*cada1f5dV;
cada1f6 = cos(cada1f5);
cada1td1 = zeros(size(cada1f2dV,1),3);
cada1td1(:,3) = cada1f6.*cada1f2dV;
cada1tf1 = cada1f2(:,Gator1Data.Index13);
cada1td1(:,Gator1Data.Index14) = cada1td1(:,Gator1Data.Index14) + cada1tf1.*cada1f6dV;
cada1f7dV = cada1td1;
cada1f7 = cada1f2.*cada1f6;
cada1f8dV = x.dV(:,2);
cada1f8 = x.f(:,2);
cada1f9dV = L2.f.*cada1f8dV;
cada1f9 = L2.f*cada1f8;
cada1f10dV = x.dV(:,1);
cada1f10 = x.f(:,1);
cada1f11dV = x.dV(:,3);
cada1f11 = x.f(:,3);
cada1td1 = zeros(size(cada1f10dV,1),2);
cada1td1(:,1) = cada1f10dV;
cada1td1(:,2) = cada1td1(:,2) + cada1f11dV;
cada1f12dV = cada1td1;
cada1f12 = cada1f10 + cada1f11;
cada1tf1 = cada1f12(:,Gator1Data.Index15);
cada1f13dV = -sin(cada1tf1).*cada1f12dV;
cada1f13 = cos(cada1f12);
cada1td1 = zeros(size(cada1f9dV,1),3);
cada1td1(:,2) = cada1f13.*cada1f9dV;
cada1tf1 = cada1f9(:,Gator1Data.Index16);
cada1td1(:,Gator1Data.Index17) = cada1td1(:,Gator1Data.Index17) + cada1tf1.*cada1f13dV;
cada1f14dV = cada1td1;
cada1f14 = cada1f9.*cada1f13;
cada1td1 = zeros(size(cada1f7dV,1),4);
cada1td1(:,Gator1Data.Index18) = cada1f7dV;
cada1td1(:,Gator1Data.Index19) = cada1td1(:,Gator1Data.Index19) + cada1f14dV;
cada1f15dV = cada1td1;
cada1f15 = cada1f7 + cada1f14;
cada1f16dV = x.dV(:,2);
cada1f16 = x.f(:,2);
cada1f17dV = L1.f.*cada1f16dV;
cada1f17 = L1.f*cada1f16;
cada1f18dV = x.dV(:,1);
cada1f18 = x.f(:,1);
cada1f19dV = -sin(cada1f18).*cada1f18dV;
cada1f19 = cos(cada1f18);
cada1td1 = zeros(size(cada1f17dV,1),2);
cada1td1(:,2) = cada1f19.*cada1f17dV;
cada1td1(:,1) = cada1td1(:,1) + cada1f17.*cada1f19dV;
cada1f20dV = cada1td1;
cada1f20 = cada1f17.*cada1f19;
cada1td1 = cada1f15dV;
cada1td1(:,Gator1Data.Index20) = cada1td1(:,Gator1Data.Index20) + cada1f20dV;
VXZ_3.dV = cada1td1;
VXZ_3.f = cada1f15 + cada1f20;
%User Line: VXZ_3 = L2 .* x(:,4) .* cos(x(:,1) + x(:,3)) + L2 .* x(:,2) .* cos(x(:,1) + x(:,3)) + L1 .* x(:,2) .* cos(x(:,1));
cada1td1 = zeros(size(XYZ_1.f,1),12);
cada1td1(:,Gator1Data.Index21) = XYZ_1.dV;
cada1td1(:,Gator1Data.Index22) = XYZ_3.dV;
cada1td1(:,Gator1Data.Index23) = VXZ_1.dV;
cada1td1(:,Gator1Data.Index24) = VXZ_3.dV;
XZ.dV = cada1td1;
XZ.f = [XYZ_1.f XYZ_3.f VXZ_1.f VXZ_3.f];
%User Line: XZ=[XYZ_1 XYZ_3 VXZ_1 VXZ_3];
end
function dx = ADiGator_xpfunction_arm1(t,x,u)
global ADiGator_ArmContinuousADiGatorGrd
Gator1Data = ADiGator_ArmContinuousADiGatorGrd.ADiGator_xpfunction_arm1.Gator1Data;
% ADiGator Start Derivative Computations
cada1f1dV = x.dV(:,3);
cada1f1 = x.f(:,3);
t1.dV = 2.*cada1f1dV;
t1.f = 2*cada1f1;
%User Line: t1 = 2 .* x(:,3);
t2.dV = cos(t1.f).*t1.dV;
t2.f = sin(t1.f);
%User Line: t2 = sin(t1);
cada1f1dV = x.dV(:,3);
cada1f1 = x.f(:,3);
t3.dV = cos(cada1f1).*cada1f1dV;
t3.f = sin(cada1f1);
%User Line: t3 = sin(x(:,3));
cada1f1dV = x.dV(:,3);
cada1f1 = x.f(:,3);
t4.dV = -sin(cada1f1).*cada1f1dV;
t4.f = cos(cada1f1);
%User Line: t4 = cos(x(:,3));
t5.dV = u.dV(:,3);
t5.f = u.f(:,3);
%User Line: t5 = (u(:,3));
t6.f =  cos(0.9757019e7 ./ 0.395279671e9);
%User Line: t6 = cos(0.9757019e7 ./ 0.395279671e9);
cada1f1dV = x.dV(:,3);
cada1f1 = x.f(:,3);
cada1f2dV = 143763422962500.*cada1f1dV;
cada1f2 = 143763422962500*cada1f1;
cada1f3dV = -cada1f2dV;
cada1f3 = 1803973530562500 - cada1f2;
cada1f4dV = x.dV(:,3);
cada1f4 = x.f(:,3);
cada1td1 = cada1f4.*cada1f3dV;
cada1td1 = cada1td1 + cada1f3.*cada1f4dV;
cada1f5dV = cada1td1;
cada1f5 = cada1f3.*cada1f4;
cada1f6dV = cada1f5dV;
cada1f6 = cada1f5 - 213763932628125;
cada1f7dV = x.dV(:,3);
cada1f7 = x.f(:,3);
cada1td1 = cada1f7.*cada1f6dV;
cada1td1 = cada1td1 + cada1f6.*cada1f7dV;
cada1f8dV = cada1td1;
cada1f8 = cada1f6.*cada1f7;
cada1f9 = 1.159655375e+16*t6.f;
cada1f10dV = cada1f8dV;
cada1f10 = cada1f8 + cada1f9;
t7.dV = cada1f10dV;
t7.f = cada1f10 - 1.304793585595932e+16;
%User Line: t7 = (((1803973530562500 - 143763422962500 .* x(:,3)) .* x(:,3) - 213763932628125) .* x(:,3)) + 0.11596553750000000e17 .* t6 - 0.13047935855959323e17;
cada1f1 = t6.f^2;
t8.f = 1/cada1f1;
%User Line: t8 = 0.1e1 ./ t6 .^ 2;
cada1f1dV = 2.*t7.f.^(2-1).*t7.dV;
cada1f1 = t7.f.^2;
cada1f2dV = -cada1f1dV;
cada1f2 = uminus(cada1f1);
cada1f3dV = t8.f.*cada1f2dV;
cada1f3 = cada1f2*t8.f;
cada1f4dV = cada1f3dV./6.051602649448758e+31;
cada1f4 = cada1f3/6.051602649448758e+31;
t7.dV = exp(cada1f4).*cada1f4dV;
t7.f = exp(cada1f4);
%User Line: t7 = exp(-t7 .^ 2 .* t8 ./ 0.60516026494487578125000000000000e32);
cada1f1dV = x.dV(:,3);
cada1f1 = x.f(:,3);
cada1f2dV = 0.00218.*cada1f1dV;
cada1f2 = 0.00218*cada1f1;
cada1f3dV = cada1f2dV;
cada1f3 = cada1f2 - 0.0007514000000000001;
cada1f4dV = x.dV(:,3);
cada1f4 = x.f(:,3);
cada1td1 = cada1f4.*cada1f3dV;
cada1td1 = cada1td1 + cada1f3.*cada1f4dV;
cada1f5dV = cada1td1;
cada1f5 = cada1f3.*cada1f4;
cada1f6dV = cada1f5dV;
cada1f6 = cada1f5 - 0.03304;
cada1f7dV = x.dV(:,3);
cada1f7 = x.f(:,3);
cada1td1 = cada1f7.*cada1f6dV;
cada1td1 = cada1td1 + cada1f6.*cada1f7dV;
cada1f8dV = cada1td1;
cada1f8 = cada1f6.*cada1f7;
t8.dV = cada1f8dV;
t8.f = cada1f8 + 0.001569;
%User Line: t8 = ((0.109e3 ./ 0.50000e5 .* x(:,3) - 0.3757e4 ./ 0.5000000e7) .* x(:,3) - 0.413e3 ./ 0.12500e5) .* x(:,3) + 0.1569e4 ./ 0.1000000e7;
t9.dV = u.dV(:,4);
t9.f = u.f(:,4);
%User Line: t9 = (u(:,4));
t10.f =  cos(0.9296917e7 ./ 0.68662276e8);
%User Line: t10 = cos(0.9296917e7 ./ 0.68662276e8);
cada1f1dV = x.dV(:,3);
cada1f1 = x.f(:,3);
cada1f2dV = 1223583431983491.*cada1f1dV;
cada1f2 = 1223583431983491*cada1f1;
cada1f3dV = -cada1f2dV;
cada1f3 = 5199695736264923 - cada1f2;
cada1f4dV = x.dV(:,3);
cada1f4 = x.f(:,3);
cada1td1 = cada1f4.*cada1f3dV;
cada1td1 = cada1td1 + cada1f3.*cada1f4dV;
cada1f5dV = cada1td1;
cada1f5 = cada1f3.*cada1f4;
cada1f6dV = cada1f5dV;
cada1f6 = cada1f5 - 429571030367677.1;
cada1f7dV = x.dV(:,3);
cada1f7 = x.f(:,3);
cada1td1 = cada1f7.*cada1f6dV;
cada1td1 = cada1td1 + cada1f6.*cada1f7dV;
cada1f8dV = cada1td1;
cada1f8 = cada1f6.*cada1f7;
cada1f9 = 3.869269376254397e+16*t10.f;
cada1f10dV = cada1f8dV;
cada1f10 = cada1f8 - cada1f9;
t11.dV = cada1f10dV;
t11.f = cada1f10 + 2.647991454304237e+16;
%User Line: t11 = ((0.259984786813246133109e21 ./ 0.50000e5 - 0.305895857995872760311e21 ./ 0.250000e6 .* x(:,3)) .* x(:,3) - 0.214785515183838523383e21 ./ 0.500000e6) .* x(:,3) - 0.38692693762543967e17 .* t10 + 0.1323995727152118605409e22 ./ 0.50000e5;
cada1f1 = t10.f^2;
t12.f = 1/cada1f1;
%User Line: t12 = 0.1e1 ./ t10 .^ 2;
cada1f1dV = 2.*t11.f.^(2-1).*t11.dV;
cada1f1 = t11.f.^2;
cada1f2dV = -1.484326886048756e-33.*cada1f1dV;
cada1f2 = -1.484326886048756e-33*cada1f1;
cada1f3dV = t12.f.*cada1f2dV;
cada1f3 = cada1f2*t12.f;
t11.dV = exp(cada1f3).*cada1f3dV;
t11.f = exp(cada1f3);
%User Line: t11 = exp(-0.20e2 ./ 0.13474120955418079287656072472873801e35 .* t11 .^ 2 .* t12);
cada1f1dV = x.dV(:,3);
cada1f1 = x.f(:,3);
cada1f2dV = 0.001451.*cada1f1dV;
cada1f2 = 0.001451*cada1f1;
cada1f3dV = -cada1f2dV;
cada1f3 = -0.00665 - cada1f2;
cada1f4dV = x.dV(:,3);
cada1f4 = x.f(:,3);
cada1td1 = cada1f4.*cada1f3dV;
cada1td1 = cada1td1 + cada1f3.*cada1f4dV;
cada1f5dV = cada1td1;
cada1f5 = cada1f3.*cada1f4;
cada1f6dV = cada1f5dV;
cada1f6 = cada1f5 + 0.02653;
cada1f7dV = x.dV(:,3);
cada1f7 = x.f(:,3);
cada1td1 = cada1f7.*cada1f6dV;
cada1td1 = cada1td1 + cada1f6.*cada1f7dV;
cada1f8dV = cada1td1;
cada1f8 = cada1f6.*cada1f7;
t12.dV = cada1f8dV;
t12.f = cada1f8 - 0.000683;
%User Line: t12 = ((-0.133e3 ./ 0.20000e5 - 0.1451e4 ./ 0.1000000e7 .* x(:,3)) .* x(:,3) + 0.2653e4 ./ 0.100000e6) .* x(:,3) - 0.683e3 ./ 0.1000000e7;
t13.dV = u.dV(:,5);
t13.f = u.f(:,5);
%User Line: t13 = (u(:,5));
cada1f1dV = x.dV(:,3);
cada1f1 = x.f(:,3);
cada1f2dV = 101172902936408.4.*cada1f1dV;
cada1f2 = 101172902936408.4*cada1f1;
cada1f3dV = cada1f2dV;
cada1f3 = cada1f2 - 682275207997165;
cada1f4dV = x.dV(:,1);
cada1f4 = x.f(:,1);
cada1f5dV = 10400008984481.1.*cada1f4dV;
cada1f5 = 10400008984481.1*cada1f4;
cada1td1 = zeros(size(cada1f3dV,1),2);
cada1td1(:,2) = cada1f3dV;
cada1td1(:,1) = cada1td1(:,1) + -cada1f5dV;
cada1f6dV = cada1td1;
cada1f6 = cada1f3 - cada1f5;
cada1f7dV = x.dV(:,3);
cada1f7 = x.f(:,3);
cada1tf1 = cada1f7(:,Gator1Data.Index1);
cada1td1 = cada1tf1.*cada1f6dV;
cada1td1(:,2) = cada1td1(:,2) + cada1f6.*cada1f7dV;
cada1f8dV = cada1td1;
cada1f8 = cada1f6.*cada1f7;
cada1f9dV = x.dV(:,1);
cada1f9 = x.f(:,1);
cada1f10dV = 45408083610466.71.*cada1f9dV;
cada1f10 = 45408083610466.71*cada1f9;
cada1f11dV = cada1f10dV;
cada1f11 = cada1f10 - 12505974742781.02;
cada1f12dV = x.dV(:,1);
cada1f12 = x.f(:,1);
cada1td1 = cada1f12.*cada1f11dV;
cada1td1 = cada1td1 + cada1f11.*cada1f12dV;
cada1f13dV = cada1td1;
cada1f13 = cada1f11.*cada1f12;
cada1td1 = cada1f8dV;
cada1td1(:,1) = cada1td1(:,1) + cada1f13dV;
cada1f14dV = cada1td1;
cada1f14 = cada1f8 + cada1f13;
cada1f15dV = cada1f14dV;
cada1f15 = cada1f14 + 8441172340802.135;
cada1f16dV = x.dV(:,3);
cada1f16 = x.f(:,3);
cada1tf1 = cada1f16(:,Gator1Data.Index2);
cada1td1 = cada1tf1.*cada1f15dV;
cada1td1(:,2) = cada1td1(:,2) + cada1f15.*cada1f16dV;
cada1f17dV = cada1td1;
cada1f17 = cada1f15.*cada1f16;
cada1f18dV = x.dV(:,1);
cada1f18 = x.f(:,1);
cada1f19dV = 152523848823721.4.*cada1f18dV;
cada1f19 = 152523848823721.4*cada1f18;
cada1f20dV = cada1f19dV;
cada1f20 = cada1f19 - 176612635237152;
cada1f21dV = x.dV(:,1);
cada1f21 = x.f(:,1);
cada1td1 = cada1f21.*cada1f20dV;
cada1td1 = cada1td1 + cada1f20.*cada1f21dV;
cada1f22dV = cada1td1;
cada1f22 = cada1f20.*cada1f21;
cada1f23dV = cada1f22dV;
cada1f23 = cada1f22 - 886813526166294;
cada1f24dV = x.dV(:,1);
cada1f24 = x.f(:,1);
cada1td1 = cada1f24.*cada1f23dV;
cada1td1 = cada1td1 + cada1f23.*cada1f24dV;
cada1f25dV = cada1td1;
cada1f25 = cada1f23.*cada1f24;
cada1td1 = cada1f17dV;
cada1td1(:,1) = cada1td1(:,1) + cada1f25dV;
cada1f26dV = cada1td1;
cada1f26 = cada1f17 + cada1f25;
t14.dV = cada1f26dV;
t14.f = cada1f26 + 1506126811477142;
%User Line: t14 = ((0.5058645146820418461e19 ./ 0.50000e5 .* x(:,3) - 0.682275207997165079e18 ./ 0.1000e4 - 0.1040000898448109983e19 ./ 0.100000e6 .* x(:,1)) .* x(:,3) + (0.1135202090261667901e19 ./ 0.25000e5 .* x(:,1) - 0.1250597474278101741e19 ./ 0.100000e6) .* x(:,1) + 0.2110293085200533849e19 ./ 0.250000e6) .* x(:,3) + ((0.7626192441186071401e19 ./ 0.50000e5 .* x(:,1) - 0.4415315880928799803e19 ./ 0.25000e5) .* x(:,1) - 0.2217033815415735151e19 ./ 0.2500e4) .* x(:,1) + 0.753063405738570947e18 ./ 0.500e3;
cada1tf2 = t14.f(:,Gator1Data.Index3);
cada1f1dV = 2.*cada1tf2.^(2-1).*t14.dV;
cada1f1 = t14.f.^2;
cada1f2dV = -1.603870747449941e-31.*cada1f1dV;
cada1f2 = -1.603870747449941e-31*cada1f1;
cada1tf1 = cada1f2(:,Gator1Data.Index4);
t14.dV = exp(cada1tf1).*cada1f2dV;
t14.f = exp(cada1f2);
%User Line: t14 = exp(-0.4e1 ./ 0.24939665533271697380321875831125e32 .* t14 .^ 2);
cada1f1dV = x.dV(:,3);
cada1f1 = x.f(:,3);
cada1f2dV = 0.004649.*cada1f1dV;
cada1f2 = 0.004649*cada1f1;
cada1f3dV = cada1f2dV;
cada1f3 = cada1f2 + 0.0003499;
cada1f4dV = x.dV(:,1);
cada1f4 = x.f(:,1);
cada1f5dV = 0.0009663.*cada1f4dV;
cada1f5 = 0.0009663*cada1f4;
cada1td1 = zeros(size(cada1f3dV,1),2);
cada1td1(:,2) = cada1f3dV;
cada1td1(:,1) = cada1td1(:,1) + -cada1f5dV;
cada1f6dV = cada1td1;
cada1f6 = cada1f3 - cada1f5;
cada1f7dV = x.dV(:,3);
cada1f7 = x.f(:,3);
cada1tf1 = cada1f7(:,Gator1Data.Index5);
cada1td1 = cada1tf1.*cada1f6dV;
cada1td1(:,2) = cada1td1(:,2) + cada1f6.*cada1f7dV;
cada1f8dV = cada1td1;
cada1f8 = cada1f6.*cada1f7;
cada1f9dV = x.dV(:,1);
cada1f9 = x.f(:,1);
cada1f10dV = 0.001059.*cada1f9dV;
cada1f10 = 0.001059*cada1f9;
cada1f11dV = -cada1f10dV;
cada1f11 = 0.002442 - cada1f10;
cada1f12dV = x.dV(:,1);
cada1f12 = x.f(:,1);
cada1td1 = cada1f12.*cada1f11dV;
cada1td1 = cada1td1 + cada1f11.*cada1f12dV;
cada1f13dV = cada1td1;
cada1f13 = cada1f11.*cada1f12;
cada1td1 = cada1f8dV;
cada1td1(:,1) = cada1td1(:,1) + cada1f13dV;
cada1f14dV = cada1td1;
cada1f14 = cada1f8 + cada1f13;
cada1f15dV = cada1f14dV;
cada1f15 = cada1f14 - 0.04167;
cada1f16dV = x.dV(:,3);
cada1f16 = x.f(:,3);
cada1tf1 = cada1f16(:,Gator1Data.Index6);
cada1td1 = cada1tf1.*cada1f15dV;
cada1td1(:,2) = cada1td1(:,2) + cada1f15.*cada1f16dV;
cada1f17dV = cada1td1;
cada1f17 = cada1f15.*cada1f16;
cada1f18dV = x.dV(:,1);
cada1f18 = x.f(:,1);
cada1f19dV = 8.189e-05.*cada1f18dV;
cada1f19 = 8.189e-05*cada1f18;
cada1f20dV = -cada1f19dV;
cada1f20 = 0.002499 - cada1f19;
cada1f21dV = x.dV(:,1);
cada1f21 = x.f(:,1);
cada1td1 = cada1f21.*cada1f20dV;
cada1td1 = cada1td1 + cada1f20.*cada1f21dV;
cada1f22dV = cada1td1;
cada1f22 = cada1f20.*cada1f21;
cada1f23dV = cada1f22dV;
cada1f23 = cada1f22 - 0.002129;
cada1f24dV = x.dV(:,1);
cada1f24 = x.f(:,1);
cada1td1 = cada1f24.*cada1f23dV;
cada1td1 = cada1td1 + cada1f23.*cada1f24dV;
cada1f25dV = cada1td1;
cada1f25 = cada1f23.*cada1f24;
cada1td1 = cada1f17dV;
cada1td1(:,1) = cada1td1(:,1) + cada1f25dV;
cada1f26dV = cada1td1;
cada1f26 = cada1f17 + cada1f25;
t15.dV = cada1f26dV;
t15.f = cada1f26 - 0.0002464;
%User Line: t15 = ((0.4649e4 ./ 0.1000000e7 .* x(:,3) + 0.3499e4 ./ 0.10000000e8 - 0.9663e4 ./ 0.10000000e8 .* x(:,1)) .* x(:,3) + (0.1221e4 ./ 0.500000e6 - 0.1059e4 ./ 0.1000000e7 .* x(:,1)) .* x(:,1) - 0.4167e4 ./ 0.100000e6) .* x(:,3) + ((0.2499e4 ./ 0.1000000e7 - 0.8189e4 ./ 0.100000000e9 .* x(:,1)) .* x(:,1) - 0.2129e4 ./ 0.1000000e7) .* x(:,1) - 0.77e2 ./ 0.312500e6;
t16.dV = u.dV(:,6);
t16.f = u.f(:,6);
%User Line: t16 = (u(:,6));
t17.f =  cos(0.77609987e8 ./ 0.370560392e9);
%User Line: t17 = cos(0.77609987e8 ./ 0.370560392e9);
cada1f1dV = x.dV(:,1);
cada1f1 = x.f(:,1);
cada1f2dV = -4714542689587.5.*cada1f1dV;
cada1f2 = -4714542689587.5*cada1f1;
cada1f3dV = x.dV(:,3);
cada1f3 = x.f(:,3);
cada1f4dV = 25624851748100.*cada1f3dV;
cada1f4 = 25624851748100*cada1f3;
cada1td1 = zeros(size(cada1f2dV,1),2);
cada1td1(:,1) = cada1f2dV;
cada1td1(:,2) = cada1td1(:,2) + -cada1f4dV;
cada1f5dV = cada1td1;
cada1f5 = cada1f2 - cada1f4;
cada1f6dV = cada1f5dV;
cada1f6 = cada1f5 + 60716732880925;
cada1f7dV = x.dV(:,3);
cada1f7 = x.f(:,3);
cada1tf1 = cada1f7(:,Gator1Data.Index7);
cada1td1 = cada1tf1.*cada1f6dV;
cada1td1(:,2) = cada1td1(:,2) + cada1f6.*cada1f7dV;
cada1f8dV = cada1td1;
cada1f8 = cada1f6.*cada1f7;
cada1f9dV = x.dV(:,1);
cada1f9 = x.f(:,1);
cada1f10dV = -436292823815.75.*cada1f9dV;
cada1f10 = -436292823815.75*cada1f9;
cada1f11dV = cada1f10dV;
cada1f11 = cada1f10 + 7696309125725;
cada1f12dV = x.dV(:,1);
cada1f12 = x.f(:,1);
cada1td1 = cada1f12.*cada1f11dV;
cada1td1 = cada1td1 + cada1f11.*cada1f12dV;
cada1f13dV = cada1td1;
cada1f13 = cada1f11.*cada1f12;
cada1td1 = cada1f8dV;
cada1td1(:,1) = cada1td1(:,1) + cada1f13dV;
cada1f14dV = cada1td1;
cada1f14 = cada1f8 + cada1f13;
cada1f15dV = cada1f14dV;
cada1f15 = cada1f14 + 113136376548250;
cada1f16dV = x.dV(:,3);
cada1f16 = x.f(:,3);
cada1tf1 = cada1f16(:,Gator1Data.Index8);
cada1td1 = cada1tf1.*cada1f15dV;
cada1td1(:,2) = cada1td1(:,2) + cada1f15.*cada1f16dV;
cada1f17dV = cada1td1;
cada1f17 = cada1f15.*cada1f16;
cada1f18dV = x.dV(:,1);
cada1f18 = x.f(:,1);
cada1f19dV = 18832874754650.*cada1f18dV;
cada1f19 = 18832874754650*cada1f18;
cada1f20dV = -cada1f19dV;
cada1f20 = -17757794597400 - cada1f19;
cada1f21dV = x.dV(:,1);
cada1f21 = x.f(:,1);
cada1td1 = cada1f21.*cada1f20dV;
cada1td1 = cada1td1 + cada1f20.*cada1f21dV;
cada1f22dV = cada1td1;
cada1f22 = cada1f20.*cada1f21;
cada1f23dV = cada1f22dV;
cada1f23 = cada1f22 + 202051829553750;
cada1f24dV = x.dV(:,1);
cada1f24 = x.f(:,1);
cada1td1 = cada1f24.*cada1f23dV;
cada1td1 = cada1td1 + cada1f23.*cada1f24dV;
cada1f25dV = cada1td1;
cada1f25 = cada1f23.*cada1f24;
cada1td1 = cada1f17dV;
cada1td1(:,1) = cada1td1(:,1) + cada1f25dV;
cada1f26dV = cada1td1;
cada1f26 = cada1f17 + cada1f25;
cada1f27 = 906345441209483*t17.f;
cada1f28dV = cada1f26dV;
cada1f28 = cada1f26 - cada1f27;
t18.dV = cada1f28dV;
t18.f = cada1f28 + 1098566470932500;
%User Line: t18 = ((-0.9429085379175e13 ./ 0.2e1 .* x(:,1) - (25624851748100 .* x(:,3)) + 0.60716732880925e14) .* x(:,3) + (-0.1745171295263e13 ./ 0.4e1 .* x(:,1) + 0.7696309125725e13) .* x(:,1) + 0.113136376548250e15) .* x(:,3) + (((-17757794597400 - 18832874754650 .* x(:,1)) .* x(:,1) + 202051829553750) .* x(:,1)) - 0.906345441209483e15 .* t17 + 0.1098566470932500e16;
cada1f1 = t17.f^2;
t19.f = 1/cada1f1;
%User Line: t19 = 0.1e1 ./ t17 .^ 2;
cada1tf2 = t18.f(:,Gator1Data.Index9);
cada1f1dV = 2.*cada1tf2.^(2-1).*t18.dV;
cada1f1 = t18.f.^2;
cada1f2dV = -2.705203725982411e-30.*cada1f1dV;
cada1f2 = -2.705203725982411e-30*cada1f1;
cada1f3dV = t19.f.*cada1f2dV;
cada1f3 = cada1f2*t19.f;
cada1tf1 = cada1f3(:,Gator1Data.Index10);
t18.dV = exp(cada1tf1).*cada1f3dV;
t18.f = exp(cada1f3);
%User Line: t18 = exp(-0.20e2 ./ 0.7393158529210911645701002145601e31 .* t18 .^ 2 .* t19);
cada1f1dV = x.dV(:,1);
cada1f1 = x.f(:,1);
cada1f2dV = 0.000179.*cada1f1dV;
cada1f2 = 0.000179*cada1f1;
cada1f3dV = x.dV(:,3);
cada1f3 = x.f(:,3);
cada1f4dV = 0.001027.*cada1f3dV;
cada1f4 = 0.001027*cada1f3;
cada1td1 = zeros(size(cada1f2dV,1),2);
cada1td1(:,1) = cada1f2dV;
cada1td1(:,2) = cada1td1(:,2) + cada1f4dV;
cada1f5dV = cada1td1;
cada1f5 = cada1f2 + cada1f4;
cada1f6dV = cada1f5dV;
cada1f6 = cada1f5 - 0.01458;
cada1f7dV = x.dV(:,3);
cada1f7 = x.f(:,3);
cada1tf1 = cada1f7(:,Gator1Data.Index11);
cada1td1 = cada1tf1.*cada1f6dV;
cada1td1(:,2) = cada1td1(:,2) + cada1f6.*cada1f7dV;
cada1f8dV = cada1td1;
cada1f8 = cada1f6.*cada1f7;
cada1f9dV = x.dV(:,1);
cada1f9 = x.f(:,1);
cada1f10dV = -0.0006593.*cada1f9dV;
cada1f10 = -0.0006593*cada1f9;
cada1f11dV = cada1f10dV;
cada1f11 = cada1f10 - 0.0007093;
cada1f12dV = x.dV(:,1);
cada1f12 = x.f(:,1);
cada1td1 = cada1f12.*cada1f11dV;
cada1td1 = cada1td1 + cada1f11.*cada1f12dV;
cada1f13dV = cada1td1;
cada1f13 = cada1f11.*cada1f12;
cada1td1 = cada1f8dV;
cada1td1(:,1) = cada1td1(:,1) + cada1f13dV;
cada1f14dV = cada1td1;
cada1f14 = cada1f8 + cada1f13;
cada1f15dV = cada1f14dV;
cada1f15 = cada1f14 + 0.02058;
cada1f16dV = x.dV(:,3);
cada1f16 = x.f(:,3);
cada1tf1 = cada1f16(:,Gator1Data.Index12);
cada1td1 = cada1tf1.*cada1f15dV;
cada1td1(:,2) = cada1td1(:,2) + cada1f15.*cada1f16dV;
cada1f17dV = cada1td1;
cada1f17 = cada1f15.*cada1f16;
cada1f18dV = x.dV(:,1);
cada1f18 = x.f(:,1);
cada1f19dV = 3.133e-05.*cada1f18dV;
cada1f19 = 3.133e-05*cada1f18;
cada1f20dV = -cada1f19dV;
cada1f20 = 0.0005367 - cada1f19;
cada1f21dV = x.dV(:,1);
cada1f21 = x.f(:,1);
cada1td1 = cada1f21.*cada1f20dV;
cada1td1 = cada1td1 + cada1f20.*cada1f21dV;
cada1f22dV = cada1td1;
cada1f22 = cada1f20.*cada1f21;
cada1f23dV = cada1f22dV;
cada1f23 = cada1f22 + 0.0003999;
cada1f24dV = x.dV(:,1);
cada1f24 = x.f(:,1);
cada1td1 = cada1f24.*cada1f23dV;
cada1td1 = cada1td1 + cada1f23.*cada1f24dV;
cada1f25dV = cada1td1;
cada1f25 = cada1f23.*cada1f24;
cada1td1 = cada1f17dV;
cada1td1(:,1) = cada1td1(:,1) + cada1f25dV;
cada1f26dV = cada1td1;
cada1f26 = cada1f17 + cada1f25;
t19.dV = cada1f26dV;
t19.f = cada1f26 + 0.01782;
%User Line: t19 = ((0.179e3 ./ 0.1000000e7 .* x(:,1) + 0.1027e4 ./ 0.1000000e7 .* x(:,3) - 0.729e3 ./ 0.50000e5) .* x(:,3) + (-0.6593e4 ./ 0.10000000e8 .* x(:,1) - 0.7093e4 ./ 0.10000000e8) .* x(:,1) + 0.1029e4 ./ 0.50000e5) .* x(:,3) + ((0.5367e4 ./ 0.10000000e8 - 0.3133e4 ./ 0.100000000e9 .* x(:,1)) .* x(:,1) + 0.3999e4 ./ 0.10000000e8) .* x(:,1) + 0.891e3 ./ 0.50000e5;
cada1f1dV = -798.52.*t16.dV;
cada1f1 = -798.52*t16.f;
cada1f2dV = t17.f.*cada1f1dV;
cada1f2 = cada1f1*t17.f;
cada1td1 = zeros(size(cada1f2dV,1),3);
cada1td1(:,3) = t18.f.*cada1f2dV;
cada1tf1 = cada1f2(:,Gator1Data.Index13);
cada1td1(:,Gator1Data.Index14) = cada1td1(:,Gator1Data.Index14) + cada1tf1.*t18.dV;
t20.dV = cada1td1;
t20.f = cada1f2.*t18.f;
%User Line: t20 = -0.19963e5 ./ 0.25e2 .* t16 .* t17 .* t18;
cada1f1dV = -971.6839441.*t13.dV;
cada1f1 = -971.6839441*t13.f;
cada1td1 = zeros(size(cada1f1dV,1),3);
cada1td1(:,3) = t14.f.*cada1f1dV;
cada1tf1 = cada1f1(:,Gator1Data.Index15);
cada1td1(:,Gator1Data.Index16) = cada1td1(:,Gator1Data.Index16) + cada1tf1.*t14.dV;
t21.dV = cada1td1;
t21.f = cada1f1.*t14.f;
%User Line: t21 = -0.4712823570e10 ./ 0.4850161e7 .* t13 .* t14;
t22.dV = u.dV(:,1);
t22.f = u.f(:,1);
%User Line: t22 = (u(:,1));
t23.f =  cos(0.64170100e8 ./ 0.169963367e9);
%User Line: t23 = cos(0.64170100e8 ./ 0.169963367e9);
cada1f1dV = x.dV(:,1);
cada1f1 = x.f(:,1);
cada1f2dV = 44744800301685.12.*cada1f1dV;
cada1f2 = 44744800301685.12*cada1f1;
cada1f3dV = cada1f2dV;
cada1f3 = cada1f2 - 376788101455838.8;
cada1f4dV = x.dV(:,1);
cada1f4 = x.f(:,1);
cada1td1 = cada1f4.*cada1f3dV;
cada1td1 = cada1td1 + cada1f3.*cada1f4dV;
cada1f5dV = cada1td1;
cada1f5 = cada1f3.*cada1f4;
cada1f6dV = cada1f5dV;
cada1f6 = cada1f5 - 572461675009411.8;
cada1f7dV = x.dV(:,1);
cada1f7 = x.f(:,1);
cada1td1 = cada1f7.*cada1f6dV;
cada1td1 = cada1td1 + cada1f6.*cada1f7dV;
cada1f8dV = cada1td1;
cada1f8 = cada1f6.*cada1f7;
cada1f9 = 2330666340866412*t23.f;
cada1f10dV = cada1f8dV;
cada1f10 = cada1f8 - cada1f9;
t24.dV = cada1f10dV;
t24.f = cada1f10 + 2289270302179056;
%User Line: t24 = ((0.8948960060337024291e19 ./ 0.200000e6 .* x(:,1) - 0.37678810145583870171e20 ./ 0.100000e6) .* x(:,1) - 0.57246167500941181419e20 ./ 0.100000e6) .* x(:,1) - 0.2330666340866412e16 .* t23 + 0.22892703021790555601e20 ./ 0.10000e5;
cada1f1 = t23.f^2;
t25.f = 1/cada1f1;
%User Line: t25 = 0.1e1 ./ t23 .^ 2;
cada1f1dV = 2.*t24.f.^(2-1).*t24.dV;
cada1f1 = t24.f.^2;
cada1f2dV = -4.090979260610264e-31.*cada1f1dV;
cada1f2 = -4.090979260610264e-31*cada1f1;
cada1f3dV = t25.f.*cada1f2dV;
cada1f3 = cada1f2*t25.f;
t24.dV = exp(cada1f3).*cada1f3dV;
t24.f = exp(cada1f3);
%User Line: t24 = exp(-0.5e1 ./ 0.12222012583007167884063366945924e32 .* t24 .^ 2 .* t25);
cada1f1dV = x.dV(:,1);
cada1f1 = x.f(:,1);
cada1f2dV = 0.001176.*cada1f1dV;
cada1f2 = 0.001176*cada1f1;
cada1f3dV = cada1f2dV;
cada1f3 = 0.004126 + cada1f2;
cada1f4dV = x.dV(:,1);
cada1f4 = x.f(:,1);
cada1td1 = cada1f4.*cada1f3dV;
cada1td1 = cada1td1 + cada1f3.*cada1f4dV;
cada1f5dV = cada1td1;
cada1f5 = cada1f3.*cada1f4;
cada1f6dV = cada1f5dV;
cada1f6 = cada1f5 - 0.03692;
cada1f7dV = x.dV(:,1);
cada1f7 = x.f(:,1);
cada1td1 = cada1f7.*cada1f6dV;
cada1td1 = cada1td1 + cada1f6.*cada1f7dV;
cada1f8dV = cada1td1;
cada1f8 = cada1f6.*cada1f7;
t25.dV = cada1f8dV;
t25.f = cada1f8 - 0.02983;
%User Line: t25 = ((0.2063e4 ./ 0.500000e6 + 0.147e3 ./ 0.125000e6 .* x(:,1)) .* x(:,1) - 0.923e3 ./ 0.25000e5) .* x(:,1) - 0.2983e4 ./ 0.100000e6;
t26.dV = u.dV(:,2);
t26.f = u.f(:,2);
%User Line: t26 = (u(:,2));
t27.f =  cos(0.116096479e9 ./ 0.341944093e9);
%User Line: t27 = cos(0.116096479e9 ./ 0.341944093e9);
cada1f1dV = x.dV(:,1);
cada1f1 = x.f(:,1);
cada1f2dV = -64068.2956495.*cada1f1dV;
cada1f2 = -64068.2956495*cada1f1;
cada1f3dV = cada1f2dV;
cada1f3 = cada1f2 - 775358.0556420001;
cada1f4dV = x.dV(:,1);
cada1f4 = x.f(:,1);
cada1td1 = cada1f4.*cada1f3dV;
cada1td1 = cada1td1 + cada1f3.*cada1f4dV;
cada1f5dV = cada1td1;
cada1f5 = cada1f3.*cada1f4;
cada1f6dV = cada1f5dV;
cada1f6 = cada1f5 + 2888749.09229;
cada1f7dV = x.dV(:,1);
cada1f7 = x.f(:,1);
cada1td1 = cada1f7.*cada1f6dV;
cada1td1 = cada1td1 + cada1f6.*cada1f7dV;
cada1f8dV = cada1td1;
cada1f8 = cada1f6.*cada1f7;
cada1f9 = 19919902*t27.f;
cada1f10dV = cada1f8dV;
cada1f10 = cada1f8 - cada1f9;
t28.dV = cada1f10dV;
t28.f = cada1f10 + 5733000.00617;
%User Line: t28 = ((-0.128136591299e12 ./ 0.2000000e7 .* x(:,1) - 0.387679027821e12 ./ 0.500000e6) .* x(:,1) + 0.288874909229e12 ./ 0.100000e6) .* x(:,1) - 0.19919902e8 .* t27 + 0.573300000617e12 ./ 0.100000e6;
cada1f1 = t27.f^2;
t29.f = 1/cada1f1;
%User Line: t29 = 0.1e1 ./ t27 .^ 2;
cada1f1dV = 2.*t28.f.^(2-1).*t28.dV;
cada1f1 = t28.f.^2;
cada1f2dV = -5.600323199480429e-15.*cada1f1dV;
cada1f2 = -5.600323199480429e-15*cada1f1;
cada1f3dV = t29.f.*cada1f2dV;
cada1f3 = cada1f2*t29.f;
t28.dV = exp(cada1f3).*cada1f3dV;
t28.f = exp(cada1f3);
%User Line: t28 = exp(-0.5e1 ./ 0.892805615301609e15 .* t28 .^ 2 .* t29);
cada1f1dV = x.dV(:,1);
cada1f1 = x.f(:,1);
cada1f2dV = 0.0008523.*cada1f1dV;
cada1f2 = 0.0008523*cada1f1;
cada1f3dV = cada1f2dV;
cada1f3 = cada1f2 - 0.004121;
cada1f4dV = x.dV(:,1);
cada1f4 = x.f(:,1);
cada1td1 = cada1f4.*cada1f3dV;
cada1td1 = cada1td1 + cada1f3.*cada1f4dV;
cada1f5dV = cada1td1;
cada1f5 = cada1f3.*cada1f4;
cada1f6dV = cada1f5dV;
cada1f6 = cada1f5 - 0.01573;
cada1f7dV = x.dV(:,1);
cada1f7 = x.f(:,1);
cada1td1 = cada1f7.*cada1f6dV;
cada1td1 = cada1td1 + cada1f6.*cada1f7dV;
cada1f8dV = cada1td1;
cada1f8 = cada1f6.*cada1f7;
t29.dV = cada1f8dV;
t29.f = cada1f8 + 0.03157;
%User Line: t29 = ((0.8523e4 ./ 0.10000000e8 .* x(:,1) - 0.4121e4 ./ 0.1000000e7) .* x(:,1) - 0.1573e4 ./ 0.100000e6) .* x(:,1) + 0.3157e4 ./ 0.100000e6;
cada1f1dV = x.dV(:,1);
cada1f1 = x.f(:,1);
cada1f2dV = -0.001015.*cada1f1dV;
cada1f2 = -0.001015*cada1f1;
cada1f3dV = cada1f2dV;
cada1f3 = cada1f2 + 0.001181;
cada1f4dV = x.dV(:,3);
cada1f4 = x.f(:,3);
cada1f5dV = 0.0003035.*cada1f4dV;
cada1f5 = 0.0003035*cada1f4;
cada1td1 = zeros(size(cada1f3dV,1),2);
cada1td1(:,1) = cada1f3dV;
cada1td1(:,2) = cada1td1(:,2) + -cada1f5dV;
cada1f6dV = cada1td1;
cada1f6 = cada1f3 - cada1f5;
cada1f7dV = x.dV(:,3);
cada1f7 = x.f(:,3);
cada1tf1 = cada1f7(:,Gator1Data.Index17);
cada1td1 = cada1tf1.*cada1f6dV;
cada1td1(:,2) = cada1td1(:,2) + cada1f6.*cada1f7dV;
cada1f8dV = cada1td1;
cada1f8 = cada1f6.*cada1f7;
cada1f9dV = x.dV(:,1);
cada1f9 = x.f(:,1);
cada1f10dV = 0.0003404.*cada1f9dV;
cada1f10 = 0.0003404*cada1f9;
cada1f11dV = -cada1f10dV;
cada1f11 = 0.005172 - cada1f10;
cada1f12dV = x.dV(:,1);
cada1f12 = x.f(:,1);
cada1td1 = cada1f12.*cada1f11dV;
cada1td1 = cada1td1 + cada1f11.*cada1f12dV;
cada1f13dV = cada1td1;
cada1f13 = cada1f11.*cada1f12;
cada1td1 = cada1f8dV;
cada1td1(:,1) = cada1td1(:,1) + cada1f13dV;
cada1f14dV = cada1td1;
cada1f14 = cada1f8 + cada1f13;
cada1f15dV = cada1f14dV;
cada1f15 = cada1f14 - 0.002228;
cada1f16dV = x.dV(:,3);
cada1f16 = x.f(:,3);
cada1tf1 = cada1f16(:,Gator1Data.Index18);
cada1td1 = cada1tf1.*cada1f15dV;
cada1td1(:,2) = cada1td1(:,2) + cada1f15.*cada1f16dV;
cada1f17dV = cada1td1;
cada1f17 = cada1f15.*cada1f16;
cada1f18dV = x.dV(:,1);
cada1f18 = x.f(:,1);
cada1f19dV = 0.001613.*cada1f18dV;
cada1f19 = 0.001613*cada1f18;
cada1f20dV = -cada1f19dV;
cada1f20 = 0.01963 - cada1f19;
cada1f21dV = x.dV(:,1);
cada1f21 = x.f(:,1);
cada1td1 = cada1f21.*cada1f20dV;
cada1td1 = cada1td1 + cada1f20.*cada1f21dV;
cada1f22dV = cada1td1;
cada1f22 = cada1f20.*cada1f21;
cada1f23dV = cada1f22dV;
cada1f23 = cada1f22 - 0.01491;
cada1f24dV = x.dV(:,1);
cada1f24 = x.f(:,1);
cada1td1 = cada1f24.*cada1f23dV;
cada1td1 = cada1td1 + cada1f23.*cada1f24dV;
cada1f25dV = cada1td1;
cada1f25 = cada1f23.*cada1f24;
cada1td1 = cada1f17dV;
cada1td1(:,1) = cada1td1(:,1) + cada1f25dV;
cada1f26dV = cada1td1;
cada1f26 = cada1f17 + cada1f25;
t30.dV = cada1f26dV;
t30.f = cada1f26 - 0.03013;
%User Line: t30 = ((-0.203e3 ./ 0.200000e6 .* x(:,1) + 0.1181e4 ./ 0.1000000e7 - 0.607e3 ./ 0.2000000e7 .* x(:,3)) .* x(:,3) + (0.1293e4 ./ 0.250000e6 - 0.851e3 ./ 0.2500000e7 .* x(:,1)) .* x(:,1) - 0.557e3 ./ 0.250000e6) .* x(:,3) + ((0.1963e4 ./ 0.100000e6 - 0.1613e4 ./ 0.1000000e7 .* x(:,1)) .* x(:,1) - 0.1491e4 ./ 0.100000e6) .* x(:,1) - 0.3013e4 ./ 0.100000e6;
cada1f1dV = x.dV(:,3);
cada1f1 = x.f(:,3);
cada1f2dV = 6.132e-05.*cada1f1dV;
cada1f2 = 6.132e-05*cada1f1;
cada1f3dV = cada1f2dV;
cada1f3 = cada1f2 - 0.0002992;
cada1f4dV = x.dV(:,1);
cada1f4 = x.f(:,1);
cada1f5dV = 0.0006756000000000001.*cada1f4dV;
cada1f5 = 0.0006756000000000001*cada1f4;
cada1td1 = zeros(size(cada1f3dV,1),2);
cada1td1(:,2) = cada1f3dV;
cada1td1(:,1) = cada1td1(:,1) + -cada1f5dV;
cada1f6dV = cada1td1;
cada1f6 = cada1f3 - cada1f5;
cada1f7dV = x.dV(:,3);
cada1f7 = x.f(:,3);
cada1tf1 = cada1f7(:,Gator1Data.Index19);
cada1td1 = cada1tf1.*cada1f6dV;
cada1td1(:,2) = cada1td1(:,2) + cada1f6.*cada1f7dV;
cada1f8dV = cada1td1;
cada1f8 = cada1f6.*cada1f7;
cada1f9dV = x.dV(:,1);
cada1f9 = x.f(:,1);
cada1f10dV = 8.934e-05.*cada1f9dV;
cada1f10 = 8.934e-05*cada1f9;
cada1f11dV = -cada1f10dV;
cada1f11 = 0.001067 - cada1f10;
cada1f12dV = x.dV(:,1);
cada1f12 = x.f(:,1);
cada1td1 = cada1f12.*cada1f11dV;
cada1td1 = cada1td1 + cada1f11.*cada1f12dV;
cada1f13dV = cada1td1;
cada1f13 = cada1f11.*cada1f12;
cada1td1 = cada1f8dV;
cada1td1(:,1) = cada1td1(:,1) + cada1f13dV;
cada1f14dV = cada1td1;
cada1f14 = cada1f8 + cada1f13;
cada1f15dV = cada1f14dV;
cada1f15 = cada1f14 + 0.0003294;
cada1f16dV = x.dV(:,3);
cada1f16 = x.f(:,3);
cada1tf1 = cada1f16(:,Gator1Data.Index20);
cada1td1 = cada1tf1.*cada1f15dV;
cada1td1(:,2) = cada1td1(:,2) + cada1f15.*cada1f16dV;
cada1f17dV = cada1td1;
cada1f17 = cada1f15.*cada1f16;
cada1f18dV = x.dV(:,1);
cada1f18 = x.f(:,1);
cada1f19dV = 0.003291.*cada1f18dV;
cada1f19 = 0.003291*cada1f18;
cada1f20dV = cada1f19dV;
cada1f20 = cada1f19 - 0.01659;
cada1f21dV = x.dV(:,1);
cada1f21 = x.f(:,1);
cada1td1 = cada1f21.*cada1f20dV;
cada1td1 = cada1td1 + cada1f20.*cada1f21dV;
cada1f22dV = cada1td1;
cada1f22 = cada1f20.*cada1f21;
cada1f23dV = cada1f22dV;
cada1f23 = cada1f22 - 0.0009128;
cada1f24dV = x.dV(:,1);
cada1f24 = x.f(:,1);
cada1td1 = cada1f24.*cada1f23dV;
cada1td1 = cada1td1 + cada1f23.*cada1f24dV;
cada1f25dV = cada1td1;
cada1f25 = cada1f23.*cada1f24;
cada1td1 = cada1f17dV;
cada1td1(:,1) = cada1td1(:,1) + cada1f25dV;
cada1f26dV = cada1td1;
cada1f26 = cada1f17 + cada1f25;
t31.dV = cada1f26dV;
t31.f = cada1f26 + 0.03137;
%User Line: t31 = ((0.1533e4 ./ 0.25000000e8 .* x(:,3) - 0.187e3 ./ 0.625000e6 - 0.1689e4 ./ 0.2500000e7 .* x(:,1)) .* x(:,3) + (0.1067e4 ./ 0.1000000e7 - 0.4467e4 ./ 0.50000000e8 .* x(:,1)) .* x(:,1) + 0.1647e4 ./ 0.5000000e7) .* x(:,3) + ((0.3291e4 ./ 0.1000000e7 .* x(:,1) - 0.1659e4 ./ 0.100000e6) .* x(:,1) - 0.1141e4 ./ 0.1250000e7) .* x(:,1) + 0.3137e4 ./ 0.100000e6;
cada1f1dV = t17.f.*t16.dV;
cada1f1 = t16.f*t17.f;
cada1td1 = zeros(size(cada1f1dV,1),3);
cada1td1(:,3) = t18.f.*cada1f1dV;
cada1tf1 = cada1f1(:,Gator1Data.Index21);
cada1td1(:,Gator1Data.Index22) = cada1td1(:,Gator1Data.Index22) + cada1tf1.*t18.dV;
t16.dV = cada1td1;
t16.f = cada1f1.*t18.f;
%User Line: t16 = (t16 .* t17 .* t18);
cada1td1 = zeros(size(t13.dV,1),3);
cada1td1(:,3) = t14.f.*t13.dV;
cada1tf1 = t13.f(:,Gator1Data.Index23);
cada1td1(:,Gator1Data.Index24) = cada1td1(:,Gator1Data.Index24) + cada1tf1.*t14.dV;
t13.dV = cada1td1;
t13.f = t13.f.*t14.f;
%User Line: t13 = (t13 .* t14);
cada1tf1 = t19.f(:,Gator1Data.Index25);
cada1td1 = cada1tf1.*t20.dV;
cada1tf1 = t20.f(:,Gator1Data.Index26);
cada1td1(:,Gator1Data.Index27) = cada1td1(:,Gator1Data.Index27) + cada1tf1.*t19.dV;
cada1f1dV = cada1td1;
cada1f1 = t20.f.*t19.f;
cada1f2dV = 1452.279722.*t5.dV;
cada1f2 = 1452.279722*t5.f;
cada1f3dV = t6.f.*cada1f2dV;
cada1f3 = cada1f2*t6.f;
cada1td1 = zeros(size(cada1f3dV,1),2);
cada1td1(:,2) = t7.f.*cada1f3dV;
cada1td1(:,1) = cada1td1(:,1) + cada1f3.*t7.dV;
cada1f4dV = cada1td1;
cada1f4 = cada1f3.*t7.f;
cada1tf1 = t8.f(:,Gator1Data.Index28);
cada1td1 = cada1tf1.*cada1f4dV;
cada1td1(:,1) = cada1td1(:,1) + cada1f4.*t8.dV;
cada1f5dV = cada1td1;
cada1f5 = cada1f4.*t8.f;
cada1td1 = zeros(size(cada1f1dV,1),4);
cada1td1(:,Gator1Data.Index29) = cada1f1dV;
cada1td1(:,Gator1Data.Index30) = cada1td1(:,Gator1Data.Index30) + -cada1f5dV;
cada1f6dV = cada1td1;
cada1f6 = cada1f1 - cada1f5;
cada1f7dV = 1577.017267.*t9.dV;
cada1f7 = 1577.017267*t9.f;
cada1f8dV = t10.f.*cada1f7dV;
cada1f8 = cada1f7*t10.f;
cada1td1 = zeros(size(cada1f8dV,1),2);
cada1td1(:,2) = t11.f.*cada1f8dV;
cada1td1(:,1) = cada1td1(:,1) + cada1f8.*t11.dV;
cada1f9dV = cada1td1;
cada1f9 = cada1f8.*t11.f;
cada1tf1 = t12.f(:,Gator1Data.Index31);
cada1td1 = cada1tf1.*cada1f9dV;
cada1td1(:,1) = cada1td1(:,1) + cada1f9.*t12.dV;
cada1f10dV = cada1td1;
cada1f10 = cada1f9.*t12.f;
cada1td1 = zeros(size(cada1f6dV,1),5);
cada1td1(:,Gator1Data.Index32) = cada1f6dV;
cada1td1(:,Gator1Data.Index33) = cada1td1(:,Gator1Data.Index33) + -cada1f10dV;
cada1f11dV = cada1td1;
cada1f11 = cada1f6 - cada1f10;
cada1tf1 = t15.f(:,Gator1Data.Index34);
cada1td1 = cada1tf1.*t21.dV;
cada1tf1 = t21.f(:,Gator1Data.Index35);
cada1td1(:,Gator1Data.Index36) = cada1td1(:,Gator1Data.Index36) + cada1tf1.*t15.dV;
cada1f12dV = cada1td1;
cada1f12 = t21.f.*t15.f;
cada1td1 = zeros(size(cada1f11dV,1),6);
cada1td1(:,Gator1Data.Index37) = cada1f11dV;
cada1td1(:,Gator1Data.Index38) = cada1td1(:,Gator1Data.Index38) + cada1f12dV;
cada1f13dV = cada1td1;
cada1f13 = cada1f11 + cada1f12;
cada1f14dV = x.dV(:,4);
cada1f14 = x.f(:,4);
cada1td1 = zeros(size(cada1f13dV,1),7);
cada1td1(:,Gator1Data.Index39) = cada1f13dV;
cada1td1(:,3) = cada1td1(:,3) + -cada1f14dV;
cada1f15dV = cada1td1;
cada1f15 = cada1f13 - cada1f14;
cada1td1 = zeros(size(t4.dV,1),7);
cada1td1(:,2) = cada1f15.*t4.dV;
cada1tf1 = t4.f(:,Gator1Data.Index40);
cada1td1 = cada1td1 + cada1tf1.*cada1f15dV;
t14.dV = cada1td1;
t14.f = t4.f.*cada1f15;
%User Line: t14 = t4 .* (t20 .* t19 - 0.726139861e9 ./ 0.500000e6 .* t5 .* t6 .* t7 .* t8 - 0.1577017267e10 ./ 0.1000000e7 .* t9 .* t10 .* t11 .* t12 + t21 .* t15 - x(:,4));
t17.f =  0.40564750000e11;
%User Line: t17 = 0.40564750000e11;
t18.dV = 4178071044.*t2.dV;
t18.f = 4178071044*t2.f;
%User Line: t18 = 0.4178071044e10 .* t2;
cada1f1dV = 102412304079864.3.*t22.dV;
cada1f1 = 102412304079864.3*t22.f;
cada1f2dV = t23.f.*cada1f1dV;
cada1f2 = cada1f1*t23.f;
cada1td1 = zeros(size(cada1f2dV,1),2);
cada1td1(:,2) = t24.f.*cada1f2dV;
cada1td1(:,1) = cada1td1(:,1) + cada1f2.*t24.dV;
cada1f3dV = cada1td1;
cada1f3 = cada1f2.*t24.f;
cada1tf1 = t25.f(:,Gator1Data.Index41);
cada1td1 = cada1tf1.*cada1f3dV;
cada1td1(:,1) = cada1td1(:,1) + cada1f3.*t25.dV;
t32.dV = cada1td1;
t32.f = cada1f3.*t25.f;
%User Line: t32 = 0.409649216319457e15 ./ 0.4e1 .* t22 .* t23 .* t24 .* t25;
cada1f1dV = 67841805889292.25.*t26.dV;
cada1f1 = 67841805889292.25*t26.f;
cada1f2dV = t27.f.*cada1f1dV;
cada1f2 = cada1f1*t27.f;
cada1td1 = zeros(size(cada1f2dV,1),2);
cada1td1(:,2) = t28.f.*cada1f2dV;
cada1td1(:,1) = cada1td1(:,1) + cada1f2.*t28.dV;
cada1f3dV = cada1td1;
cada1f3 = cada1f2.*t28.f;
cada1tf1 = t29.f(:,Gator1Data.Index42);
cada1td1 = cada1tf1.*cada1f3dV;
cada1td1(:,1) = cada1td1(:,1) + cada1f3.*t29.dV;
t33.dV = cada1td1;
t33.f = cada1f3.*t29.f;
%User Line: t33 = 0.271367223557169e15 ./ 0.4e1 .* t26 .* t27 .* t28 .* t29;
cada1f1dV = -sin(t1.f).*t1.dV;
cada1f1 = cos(t1.f);
cada1f2dV = 4178071044.*cada1f1dV;
cada1f2 = 4178071044*cada1f1;
t1.dV = cada1f2dV;
t1.f = cada1f2 - 11059671646;
%User Line: t1 = (0.4178071044e10 .* cos(t1) - 0.11059671646e11);
cada1f1dV = -129276000000.*t14.dV;
cada1f1 = -129276000000*t14.f;
cada1f2dV = x.dV(:,2);
cada1f2 = x.f(:,2);
cada1f3dV = 8356142088.*cada1f2dV;
cada1f3 = 8356142088*cada1f2;
cada1td1 = zeros(size(cada1f3dV,1),2);
cada1td1(:,1) = t2.f.*cada1f3dV;
cada1td1(:,2) = cada1td1(:,2) + cada1f3.*t2.dV;
cada1f4dV = cada1td1;
cada1f4 = cada1f3.*t2.f;
cada1f5dV = x.dV(:,2);
cada1f5 = x.f(:,2);
cada1f6dV = x.dV(:,4);
cada1f6 = x.f(:,4);
cada1td1 = zeros(size(cada1f5dV,1),2);
cada1td1(:,1) = cada1f5dV;
cada1td1(:,2) = cada1td1(:,2) + cada1f6dV;
cada1f7dV = cada1td1;
cada1f7 = cada1f5 + cada1f6;
cada1tf1 = cada1f7(:,Gator1Data.Index43);
cada1td1 = zeros(size(cada1f4dV,1),3);
cada1td1(:,Gator1Data.Index44) = cada1tf1.*cada1f4dV;
cada1tf1 = cada1f4(:,Gator1Data.Index45);
cada1td1(:,Gator1Data.Index46) = cada1td1(:,Gator1Data.Index46) + cada1tf1.*cada1f7dV;
cada1f8dV = cada1td1;
cada1f8 = cada1f4.*cada1f7;
cada1td1 = zeros(size(cada1f1dV,1),8);
cada1td1(:,Gator1Data.Index47) = cada1f1dV;
cada1td1(:,Gator1Data.Index48) = cada1td1(:,Gator1Data.Index48) + cada1f8dV;
cada1f9dV = cada1td1;
cada1f9 = cada1f1 + cada1f8;
cada1f10dV = 5244048621.*t3.dV;
cada1f10 = 5244048621*t3.f;
cada1td1 = cada1f10dV;
cada1td1 = cada1td1 + t18.dV;
cada1f11dV = cada1td1;
cada1f11 = cada1f10 + t18.f;
cada1f12dV = x.dV(:,4);
cada1f12 = x.f(:,4);
cada1td1 = zeros(size(cada1f11dV,1),2);
cada1td1(:,1) = cada1f12.*cada1f11dV;
cada1td1(:,2) = cada1td1(:,2) + cada1f11.*cada1f12dV;
cada1f13dV = cada1td1;
cada1f13 = cada1f11.*cada1f12;
cada1f14dV = 10488097242.*t3.dV;
cada1f14 = 10488097242*t3.f;
cada1f15dV = x.dV(:,2);
cada1f15 = x.f(:,2);
cada1td1 = zeros(size(cada1f14dV,1),2);
cada1td1(:,2) = cada1f15.*cada1f14dV;
cada1td1(:,1) = cada1td1(:,1) + cada1f14.*cada1f15dV;
cada1f16dV = cada1td1;
cada1f16 = cada1f14.*cada1f15;
cada1td1 = zeros(size(cada1f13dV,1),3);
cada1td1(:,Gator1Data.Index49) = cada1f13dV;
cada1td1(:,Gator1Data.Index50) = cada1td1(:,Gator1Data.Index50) + cada1f16dV;
cada1f17dV = cada1td1;
cada1f17 = cada1f13 + cada1f16;
cada1f18dV = cada1f17dV;
cada1f18 = cada1f17 + 228384750000;
cada1f19dV = x.dV(:,4);
cada1f19 = x.f(:,4);
cada1tf1 = cada1f19(:,Gator1Data.Index51);
cada1td1 = cada1tf1.*cada1f18dV;
cada1td1(:,3) = cada1td1(:,3) + cada1f18.*cada1f19dV;
cada1f20dV = cada1td1;
cada1f20 = cada1f18.*cada1f19;
cada1td1 = cada1f9dV;
cada1td1(:,Gator1Data.Index52) = cada1td1(:,Gator1Data.Index52) + cada1f20dV;
cada1f21dV = cada1td1;
cada1f21 = cada1f9 + cada1f20;
cada1f22dV = x.dV(:,2);
cada1f22 = x.f(:,2);
cada1f23dV = 29524666941.*t3.dV;
cada1f23 = 29524666941*t3.f;
cada1f24dV = x.dV(:,2);
cada1f24 = x.f(:,2);
cada1td1 = zeros(size(cada1f23dV,1),2);
cada1td1(:,2) = cada1f24.*cada1f23dV;
cada1td1(:,1) = cada1td1(:,1) + cada1f23.*cada1f24dV;
cada1f25dV = cada1td1;
cada1f25 = cada1f23.*cada1f24;
cada1f26dV = cada1f25dV;
cada1f26 = cada1f25 - t17.f;
cada1td1 = zeros(size(cada1f22dV,1),2);
cada1td1(:,1) = cada1f26.*cada1f22dV;
cada1tf1 = cada1f22(:,Gator1Data.Index53);
cada1td1 = cada1td1 + cada1tf1.*cada1f26dV;
cada1f27dV = cada1td1;
cada1f27 = cada1f22.*cada1f26;
cada1td1 = cada1f21dV;
cada1td1(:,Gator1Data.Index54) = cada1td1(:,Gator1Data.Index54) + cada1f27dV;
cada1f28dV = cada1td1;
cada1f28 = cada1f21 + cada1f27;
cada1td1 = zeros(size(cada1f28dV,1),9);
cada1td1(:,Gator1Data.Index55) = cada1f28dV;
cada1td1(:,Gator1Data.Index56) = cada1td1(:,Gator1Data.Index56) + -t32.dV;
cada1f29dV = cada1td1;
cada1f29 = cada1f28 - t32.f;
cada1td1 = zeros(size(cada1f29dV,1),10);
cada1td1(:,Gator1Data.Index57) = cada1f29dV;
cada1td1(:,Gator1Data.Index58) = cada1td1(:,Gator1Data.Index58) + -t33.dV;
cada1f30dV = cada1td1;
cada1f30 = cada1f29 - t33.f;
cada1f31dV = 64638000000.*t4.dV;
cada1f31 = 64638000000*t4.f;
cada1tf1 = t31.f(:,Gator1Data.Index59);
cada1td1 = cada1tf1.*t20.dV;
cada1tf1 = t20.f(:,Gator1Data.Index60);
cada1td1(:,Gator1Data.Index61) = cada1td1(:,Gator1Data.Index61) + cada1tf1.*t31.dV;
cada1f32dV = cada1td1;
cada1f32 = t20.f.*t31.f;
cada1f33dV = 1672.432491.*t26.dV;
cada1f33 = 1672.432491*t26.f;
cada1f34dV = t27.f.*cada1f33dV;
cada1f34 = cada1f33*t27.f;
cada1td1 = zeros(size(cada1f34dV,1),2);
cada1td1(:,2) = t28.f.*cada1f34dV;
cada1td1(:,1) = cada1td1(:,1) + cada1f34.*t28.dV;
cada1f35dV = cada1td1;
cada1f35 = cada1f34.*t28.f;
cada1tf1 = t29.f(:,Gator1Data.Index62);
cada1td1 = cada1tf1.*cada1f35dV;
cada1td1(:,1) = cada1td1(:,1) + cada1f35.*t29.dV;
cada1f36dV = cada1td1;
cada1f36 = cada1f35.*t29.f;
cada1td1 = zeros(size(cada1f32dV,1),4);
cada1td1(:,Gator1Data.Index63) = cada1f32dV;
cada1td1(:,Gator1Data.Index64) = cada1td1(:,Gator1Data.Index64) + -cada1f36dV;
cada1f37dV = cada1td1;
cada1f37 = cada1f32 - cada1f36;
cada1f38dV = 2524.662523.*t22.dV;
cada1f38 = 2524.662523*t22.f;
cada1f39dV = t23.f.*cada1f38dV;
cada1f39 = cada1f38*t23.f;
cada1td1 = zeros(size(cada1f39dV,1),2);
cada1td1(:,2) = t24.f.*cada1f39dV;
cada1td1(:,1) = cada1td1(:,1) + cada1f39.*t24.dV;
cada1f40dV = cada1td1;
cada1f40 = cada1f39.*t24.f;
cada1tf1 = t25.f(:,Gator1Data.Index65);
cada1td1 = cada1tf1.*cada1f40dV;
cada1td1(:,1) = cada1td1(:,1) + cada1f40.*t25.dV;
cada1f41dV = cada1td1;
cada1f41 = cada1f40.*t25.f;
cada1td1 = zeros(size(cada1f37dV,1),5);
cada1td1(:,Gator1Data.Index66) = cada1f37dV;
cada1td1(:,Gator1Data.Index67) = cada1td1(:,Gator1Data.Index67) + -cada1f41dV;
cada1f42dV = cada1td1;
cada1f42 = cada1f37 - cada1f41;
cada1tf1 = t30.f(:,Gator1Data.Index68);
cada1td1 = cada1tf1.*t21.dV;
cada1tf1 = t21.f(:,Gator1Data.Index69);
cada1td1(:,Gator1Data.Index70) = cada1td1(:,Gator1Data.Index70) + cada1tf1.*t30.dV;
cada1f43dV = cada1td1;
cada1f43 = t21.f.*t30.f;
cada1td1 = zeros(size(cada1f42dV,1),6);
cada1td1(:,Gator1Data.Index71) = cada1f42dV;
cada1td1(:,Gator1Data.Index72) = cada1td1(:,Gator1Data.Index72) + cada1f43dV;
cada1f44dV = cada1td1;
cada1f44 = cada1f42 + cada1f43;
cada1f45dV = x.dV(:,2);
cada1f45 = x.f(:,2);
cada1td1 = zeros(size(cada1f44dV,1),7);
cada1td1(:,Gator1Data.Index73) = cada1f44dV;
cada1td1(:,2) = cada1td1(:,2) + -cada1f45dV;
cada1f46dV = cada1td1;
cada1f46 = cada1f44 - cada1f45;
cada1td1 = zeros(size(cada1f31dV,1),7);
cada1td1(:,3) = cada1f46.*cada1f31dV;
cada1tf1 = cada1f31(:,Gator1Data.Index74);
cada1td1 = cada1td1 + cada1tf1.*cada1f46dV;
cada1f47dV = cada1td1;
cada1f47 = cada1f31.*cada1f46;
cada1td1 = cada1f30dV;
cada1td1(:,Gator1Data.Index75) = cada1td1(:,Gator1Data.Index75) + cada1f47dV;
cada1f48dV = cada1td1;
cada1f48 = cada1f30 + cada1f47;
cada1f49dV = 360166694269478.3.*t9.dV;
cada1f49 = 360166694269478.3*t9.f;
cada1f50dV = t10.f.*cada1f49dV;
cada1f50 = cada1f49*t10.f;
cada1td1 = zeros(size(cada1f50dV,1),2);
cada1td1(:,2) = t11.f.*cada1f50dV;
cada1td1(:,1) = cada1td1(:,1) + cada1f50.*t11.dV;
cada1f51dV = cada1td1;
cada1f51 = cada1f50.*t11.f;
cada1tf1 = t12.f(:,Gator1Data.Index76);
cada1td1 = cada1tf1.*cada1f51dV;
cada1td1(:,1) = cada1td1(:,1) + cada1f51.*t12.dV;
cada1f52dV = cada1td1;
cada1f52 = cada1f51.*t12.f;
cada1td1 = cada1f48dV;
cada1td1(:,Gator1Data.Index77) = cada1td1(:,Gator1Data.Index77) + cada1f52dV;
cada1f53dV = cada1td1;
cada1f53 = cada1f48 + cada1f52;
cada1f54dV = 331678541239039.5.*t5.dV;
cada1f54 = 331678541239039.5*t5.f;
cada1f55dV = t6.f.*cada1f54dV;
cada1f55 = cada1f54*t6.f;
cada1td1 = zeros(size(cada1f55dV,1),2);
cada1td1(:,2) = t7.f.*cada1f55dV;
cada1td1(:,1) = cada1td1(:,1) + cada1f55.*t7.dV;
cada1f56dV = cada1td1;
cada1f56 = cada1f55.*t7.f;
cada1tf1 = t8.f(:,Gator1Data.Index78);
cada1td1 = cada1tf1.*cada1f56dV;
cada1td1(:,1) = cada1td1(:,1) + cada1f56.*t8.dV;
cada1f57dV = cada1td1;
cada1f57 = cada1f56.*t8.f;
cada1td1 = cada1f53dV;
cada1td1(:,Gator1Data.Index79) = cada1td1(:,Gator1Data.Index79) + cada1f57dV;
cada1f58dV = cada1td1;
cada1f58 = cada1f53 + cada1f57;
cada1f59dV = 182369790570000.*t19.dV;
cada1f59 = 182369790570000*t19.f;
cada1f60dV = 32391764170000.*t31.dV;
cada1f60 = 32391764170000*t31.f;
cada1td1 = cada1f59dV;
cada1td1 = cada1td1 + -cada1f60dV;
cada1f61dV = cada1td1;
cada1f61 = cada1f59 - cada1f60;
cada1tf1 = cada1f61(:,Gator1Data.Index80);
cada1td1 = cada1tf1.*t16.dV;
cada1tf1 = t16.f(:,Gator1Data.Index81);
cada1td1(:,Gator1Data.Index82) = cada1td1(:,Gator1Data.Index82) + cada1tf1.*cada1f61dV;
cada1f62dV = cada1td1;
cada1f62 = t16.f.*cada1f61;
cada1td1 = cada1f58dV;
cada1td1(:,Gator1Data.Index83) = cada1td1(:,Gator1Data.Index83) + cada1f62dV;
cada1f63dV = cada1td1;
cada1f63 = cada1f58 + cada1f62;
cada1f64dV = 221917794652292.5.*t15.dV;
cada1f64 = 221917794652292.5*t15.f;
cada1f65dV = 39416116271430.48.*t30.dV;
cada1f65 = 39416116271430.48*t30.f;
cada1td1 = cada1f64dV;
cada1td1 = cada1td1 + -cada1f65dV;
cada1f66dV = cada1td1;
cada1f66 = cada1f64 - cada1f65;
cada1tf1 = cada1f66(:,Gator1Data.Index84);
cada1td1 = cada1tf1.*t13.dV;
cada1tf1 = t13.f(:,Gator1Data.Index85);
cada1td1(:,Gator1Data.Index86) = cada1td1(:,Gator1Data.Index86) + cada1tf1.*cada1f66dV;
cada1f67dV = cada1td1;
cada1f67 = t13.f.*cada1f66;
cada1td1 = cada1f63dV;
cada1td1(:,Gator1Data.Index87) = cada1td1(:,Gator1Data.Index87) + cada1f67dV;
t2.dV = cada1td1;
t2.f = cada1f63 + cada1f67;
%User Line: t2 = -0.129276000000e12 .* t14 + 0.8356142088e10 .* x(:,2) .* t2 .* (x(:,2) + x(:,4)) + ((0.5244048621e10 .* t3 + t18) .* x(:,4) + 0.10488097242e11 .* t3 .* x(:,2) + 0.228384750000e12) .* x(:,4) + x(:,2) .* (0.29524666941e11 .* t3 .* x(:,2) - t17) - t32 - t33 + 0.64638000000e11 .* t4 .* (t20 .* t31 - 0.1672432491e10 ./ 0.1000000e7 .* t26 .* t27 .* t28 .* t29 - 0.2524662523e10 ./ 0.1000000e7 .* t22 .* t23 .* t24 .* t25 + t21 .* t30 - x(:,2)) + 0.1440666777077913e16 ./ 0.4e1 .* t9 .* t10 .* t11 .* t12 + 0.663357082478079e15 ./ 0.2e1 .* t5 .* t6 .* t7 .* t8 + t16 .* (0.182369790570000e15 .* t19 - 0.32391764170000e14 .* t31) + t13 .* (0.1076337032828557500000e22 ./ 0.4850161e7 .* t15 - 0.191174509911157500000e21 ./ 0.4850161e7 .* t30);
t1.dV = -1./t1.f.^2.*t1.dV;
t1.f = 1./t1.f;
%User Line: t1 = 1 ./ t1;
cada1f1dV = x.dV(:,2);
cada1f1 = x.f(:,2);
cada1f2dV = -32391764170000.*t16.dV;
cada1f2 = -32391764170000*t16.f;
cada1td1 = t19.dV;
cada1td1 = cada1td1 + -t31.dV;
cada1f3dV = cada1td1;
cada1f3 = t19.f - t31.f;
cada1tf1 = cada1f3(:,Gator1Data.Index88);
cada1td1 = cada1tf1.*cada1f2dV;
cada1tf1 = cada1f2(:,Gator1Data.Index89);
cada1td1(:,Gator1Data.Index90) = cada1td1(:,Gator1Data.Index90) + cada1tf1.*cada1f3dV;
cada1f4dV = cada1td1;
cada1f4 = cada1f2.*cada1f3;
cada1f5dV = x.dV(:,2);
cada1f5 = x.f(:,2);
cada1f6dV = x.dV(:,4);
cada1f6 = x.f(:,4);
cada1td1 = zeros(size(cada1f5dV,1),2);
cada1td1(:,1) = cada1f5dV;
cada1td1(:,2) = cada1td1(:,2) + -cada1f6dV;
cada1f7dV = cada1td1;
cada1f7 = cada1f5 - cada1f6;
cada1f8dV = t17.f.*cada1f7dV;
cada1f8 = t17.f*cada1f7;
cada1td1 = zeros(size(cada1f4dV,1),5);
cada1td1(:,Gator1Data.Index91) = cada1f4dV;
cada1td1(:,Gator1Data.Index92) = cada1td1(:,Gator1Data.Index92) + cada1f8dV;
cada1f9dV = cada1td1;
cada1f9 = cada1f4 + cada1f8;
cada1f10dV = 39416116271430.48.*t13.dV;
cada1f10 = 39416116271430.48*t13.f;
cada1f11dV = -t15.dV;
cada1f11 = uminus(t15.f);
cada1td1 = cada1f11dV;
cada1td1 = cada1td1 + t30.dV;
cada1f12dV = cada1td1;
cada1f12 = cada1f11 + t30.f;
cada1tf1 = cada1f12(:,Gator1Data.Index93);
cada1td1 = cada1tf1.*cada1f10dV;
cada1tf1 = cada1f10(:,Gator1Data.Index94);
cada1td1(:,Gator1Data.Index95) = cada1td1(:,Gator1Data.Index95) + cada1tf1.*cada1f12dV;
cada1f13dV = cada1td1;
cada1f13 = cada1f10.*cada1f12;
cada1td1 = zeros(size(cada1f9dV,1),6);
cada1td1(:,Gator1Data.Index96) = cada1f9dV;
cada1td1(:,Gator1Data.Index97) = cada1td1(:,Gator1Data.Index97) + cada1f13dV;
cada1f14dV = cada1td1;
cada1f14 = cada1f9 + cada1f13;
cada1f15dV = 5244048621.*t3.dV;
cada1f15 = 5244048621*t3.f;
cada1f16dV = x.dV(:,2);
cada1f16 = x.f(:,2);
cada1f17dV = 2.*cada1f16.^(2-1).*cada1f16dV;
cada1f17 = cada1f16.^2;
cada1f18dV = x.dV(:,4);
cada1f18 = x.f(:,4);
cada1f19dV = 2.*cada1f18.^(2-1).*cada1f18dV;
cada1f19 = cada1f18.^2;
cada1td1 = zeros(size(cada1f17dV,1),2);
cada1td1(:,1) = cada1f17dV;
cada1td1(:,2) = cada1td1(:,2) + cada1f19dV;
cada1f20dV = cada1td1;
cada1f20 = cada1f17 + cada1f19;
cada1td1 = zeros(size(cada1f15dV,1),3);
cada1td1(:,2) = cada1f20.*cada1f15dV;
cada1tf1 = cada1f15(:,Gator1Data.Index98);
cada1td1(:,Gator1Data.Index99) = cada1td1(:,Gator1Data.Index99) + cada1tf1.*cada1f20dV;
cada1f21dV = cada1td1;
cada1f21 = cada1f15.*cada1f20;
cada1td1 = cada1f14dV;
cada1td1(:,Gator1Data.Index100) = cada1td1(:,Gator1Data.Index100) + -cada1f21dV;
cada1f22dV = cada1td1;
cada1f22 = cada1f14 - cada1f21;
cada1f23dV = 64638000000.*t14.dV;
cada1f23 = 64638000000*t14.f;
cada1td1 = zeros(size(cada1f22dV,1),8);
cada1td1(:,Gator1Data.Index101) = cada1f22dV;
cada1td1(:,Gator1Data.Index102) = cada1td1(:,Gator1Data.Index102) + cada1f23dV;
cada1f24dV = cada1td1;
cada1f24 = cada1f22 + cada1f23;
cada1f25dV = -t18.dV;
cada1f25 = uminus(t18.f);
cada1f26dV = x.dV(:,2);
cada1f26 = x.f(:,2);
cada1td1 = zeros(size(cada1f25dV,1),2);
cada1td1(:,2) = cada1f26.*cada1f25dV;
cada1td1(:,1) = cada1td1(:,1) + cada1f25.*cada1f26dV;
cada1f27dV = cada1td1;
cada1f27 = cada1f25.*cada1f26;
cada1f28dV = x.dV(:,4);
cada1f28 = x.f(:,4);
cada1f29dV = 10488097242.*cada1f28dV;
cada1f29 = 10488097242*cada1f28;
cada1td1 = zeros(size(cada1f29dV,1),2);
cada1td1(:,2) = t3.f.*cada1f29dV;
cada1td1(:,1) = cada1td1(:,1) + cada1f29.*t3.dV;
cada1f30dV = cada1td1;
cada1f30 = cada1f29.*t3.f;
cada1td1 = zeros(size(cada1f27dV,1),3);
cada1td1(:,Gator1Data.Index103) = cada1f27dV;
cada1td1(:,Gator1Data.Index104) = cada1td1(:,Gator1Data.Index104) + -cada1f30dV;
cada1f31dV = cada1td1;
cada1f31 = cada1f27 - cada1f30;
cada1f32dV = x.dV(:,2);
cada1f32 = x.f(:,2);
cada1tf1 = cada1f32(:,Gator1Data.Index105);
cada1td1 = cada1tf1.*cada1f31dV;
cada1td1(:,1) = cada1td1(:,1) + cada1f31.*cada1f32dV;
cada1f33dV = cada1td1;
cada1f33 = cada1f31.*cada1f32;
cada1td1 = cada1f24dV;
cada1td1(:,Gator1Data.Index106) = cada1td1(:,Gator1Data.Index106) + cada1f33dV;
cada1f34dV = cada1td1;
cada1f34 = cada1f24 + cada1f33;
cada1td1 = zeros(size(cada1f34dV,1),9);
cada1td1(:,Gator1Data.Index107) = cada1f34dV;
cada1td1(:,Gator1Data.Index108) = cada1td1(:,Gator1Data.Index108) + t32.dV;
cada1f35dV = cada1td1;
cada1f35 = cada1f34 + t32.f;
cada1td1 = zeros(size(cada1f35dV,1),10);
cada1td1(:,Gator1Data.Index109) = cada1f35dV;
cada1td1(:,Gator1Data.Index110) = cada1td1(:,Gator1Data.Index110) + t33.dV;
cada1f36dV = cada1td1;
cada1f36 = cada1f35 + t33.f;
cada1f37dV = 58911363852999.5.*t5.dV;
cada1f37 = 58911363852999.5*t5.f;
cada1f38dV = t6.f.*cada1f37dV;
cada1f38 = cada1f37*t6.f;
cada1td1 = zeros(size(cada1f38dV,1),2);
cada1td1(:,2) = t7.f.*cada1f38dV;
cada1td1(:,1) = cada1td1(:,1) + cada1f38.*t7.dV;
cada1f39dV = cada1td1;
cada1f39 = cada1f38.*t7.f;
cada1tf1 = t8.f(:,Gator1Data.Index111);
cada1td1 = cada1tf1.*cada1f39dV;
cada1td1(:,1) = cada1td1(:,1) + cada1f39.*t8.dV;
cada1f40dV = cada1td1;
cada1f40 = cada1f39.*t8.f;
cada1td1 = cada1f36dV;
cada1td1(:,Gator1Data.Index112) = cada1td1(:,Gator1Data.Index112) + -cada1f40dV;
cada1f41dV = cada1td1;
cada1f41 = cada1f36 - cada1f40;
cada1f42dV = 63971311181538.25.*t9.dV;
cada1f42 = 63971311181538.25*t9.f;
cada1f43dV = t10.f.*cada1f42dV;
cada1f43 = cada1f42*t10.f;
cada1td1 = zeros(size(cada1f43dV,1),2);
cada1td1(:,2) = t11.f.*cada1f43dV;
cada1td1(:,1) = cada1td1(:,1) + cada1f43.*t11.dV;
cada1f44dV = cada1td1;
cada1f44 = cada1f43.*t11.f;
cada1tf1 = t12.f(:,Gator1Data.Index113);
cada1td1 = cada1tf1.*cada1f44dV;
cada1td1(:,1) = cada1td1(:,1) + cada1f44.*t12.dV;
cada1f45dV = cada1td1;
cada1f45 = cada1f44.*t12.f;
cada1td1 = cada1f41dV;
cada1td1(:,Gator1Data.Index114) = cada1td1(:,Gator1Data.Index114) + -cada1f45dV;
cada1f46dV = cada1td1;
cada1f46 = cada1f41 - cada1f45;
cada1tf1 = t1.f(:,Gator1Data.Index115);
cada1td1 = cada1tf1.*cada1f46dV;
cada1td1(:,3) = cada1td1(:,3) + cada1f46.*t1.dV;
cada1f47dV = cada1td1;
cada1f47 = cada1f46.*t1.f;
cada1f48dV = x.dV(:,4);
cada1f48 = x.f(:,4);
cada1tf1 = t1.f(:,Gator1Data.Index116);
cada1td1 = cada1tf1.*t2.dV;
cada1td1(:,3) = cada1td1(:,3) + t2.f.*t1.dV;
cada1f49dV = cada1td1;
cada1f49 = t2.f.*t1.f;
cada1td1 = zeros(size(cada1f1,1),22);
cada1td1(:,3) = cada1f1dV;
cada1td1(:,Gator1Data.Index117) = cada1f47dV;
cada1td1(:,9) = cada1f48dV;
cada1td1(:,Gator1Data.Index118) = cada1f49dV;
dx.dV = cada1td1;
dx.f = [cada1f1 cada1f47 cada1f48 cada1f49];
%User Line: dx = [x(:,2) (-0.32391764170000e14 .* t16 .* (t19 - t31) + t17 .* (x(:,2) - x(:,4)) + 0.191174509911157500000e21 ./ 0.4850161e7 .* t13 .* (-t15 + t30) - 0.5244048621e10 .* t3 .* (x(:,2) .^ 2 + x(:,4) .^ 2) + 0.64638000000e11 .* t14 + (-t18 .* x(:,2) - 0.10488097242e11 .* x(:,4) .* t3) .* x(:,2) + t32 + t33 - 0.117822727705999e15 ./ 0.2e1 .* t5 .* t6 .* t7 .* t8 - 0.255885244726153e15 ./ 0.4e1 .* t9 .* t10 .* t11 .* t12) .* t1 x(:,4) t2 .* t1];
end


function ADiGator_LoadData()
global ADiGator_ArmContinuousADiGatorGrd
ADiGator_ArmContinuousADiGatorGrd = load('ArmContinuousADiGatorGrd.mat');
return
end